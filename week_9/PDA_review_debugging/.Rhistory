energy_scotland %>%
filter(sector == c("Renewables", "Gas", "Pumped hydro")) %>%
group_by(sector, year) %>%
ggplot(aes(x = year, y =  energy_prod, group = sector, colour = sector))+
geom_line()
energy_scotland %>%
filter(sector == c("Renewables", "Gas", "Pumped hydro")) %>%
ggplot(aes(x = year, y =  energy_prod, group = sector, colour = sector))+
geom_line()
energy_scotland %>%
filter(sector == c("Renewables", "Gas", "Pumped hydro")) %>%
ggplot(aes(x = year, y =  energy_prod, colour = sector))+
geom_line()
energy_scotland %>%
filter(sector == c("Renewables", "Gas", "Pumped hydro")) %>%
ggplot(aes(x = year, y =  energy_prod, colour = sector), data = sector)+
geom_line()
energy_scotland %>%
filter(sector == c("Renewables", "Gas", "Pumped hydro")) %>%
ggplot() +
geom_line(aes(x = year, y = energy_prod,  color = sector), data = renewable) +
geom_line(aes(x = year, y = energy_prod, color = sector), data = gas) +
geom_line(aes(x = year, y = energy_prod, color = sector), data = hydro) +
scale_x_continuous(breaks = years) +
labs(title = "Energy production in Scotland over time split by sector", x ="Year", y = "Energy production")
energy_scotland %>%
filter(sector == c("Renewables", "Gas", "Pumped hydro")) %>%
ggplot(aes(x = year, y = energy_prod, colour = sector)) +
geom_line()+
scale_x_continuous(breaks = years) +
labs(title = "Energy production in Scotland over time split by sector", x ="Year", y = "Energy production")
library(tidyverse)
library(skimr)
energy_scotland <- read_csv("data/energy_scotland.csv")
energy_scotland
skim(energy_scotland)
class(energy_scotland)
class(energy_scotland$year)
class(energy_scotland$energy_prod)
class(energy_scotland$sector)
energy_scotland %>%
filter(sector == c("Renewables", "Gas", "Pumped hydro")) %>%
group_by(sector)
energy_scotland %>%
filter(sector == c("Renewables", "Gas", "Pumped hydro")) %>%
group_by(year)
ggplot(aes(x = year, y = energy_prod, colour = sector)) +
geom_line()+
scale_x_continuous(breaks = years) +
labs(title = "Energy production in Scotland over time split by sector", x ="Year", y = "Energy production")
energy_scotland %>%
filter(sector == c("Renewables", "Gas", "Pumped hydro")) %>%
group_by(year
energy_scotland %>%
energy_scotland %>%
filter(sector == c("Renewables", "Gas", "Pumped hydro")) %>%
group_by(year)
energy_scotland %>%
filter(sector %in% c("Renewables", "Gas", "Pumped hydro")) %>%
group_by(year)
ggplot(aes(x = year, y = energy_prod, colour = sector)) +
geom_line()+
scale_x_continuous(breaks = years) +
labs(title = "Energy production in Scotland over time split by sector", x ="Year", y = "Energy production")
energy_scotland %>%
filter(sector %in% c("Renewables", "Gas", "Pumped hydro")) %>%
group_by(year) %>%
ggplot(aes(x = year, y = energy_prod, colour = sector)) +
geom_line()+
scale_x_continuous(breaks = years) +
labs(title = "Energy production in Scotland over time split by sector", x ="Year", y = "Energy production")
# I have reduced the number of objects needed to created the plot and then shortened the ggplot part of teh code
energy_scotland %>%
filter(sector %in% c("Renewables", "Gas", "Pumped hydro")) %>%
group_by(year) %>%
ggplot(aes(x = year, y = energy_prod, group = sector, colour = sector)) +
geom_line()+
scale_x_continuous(breaks = years) +
labs(title = "Energy production in Scotland over time split by sector", x ="Year", y = "Energy production")
# I have reduced the number of objects needed to created the plot and then shortened the ggplot part of teh code
energy_scotland %>%
filter(sector %in% c("Renewables", "Gas", "Pumped hydro")) %>%
group_by(year) %>%
ggplot(aes(x = year, y = energy_prod, group = sector)) +
geom_line()+
scale_x_continuous(breaks = years) +
labs(title = "Energy production in Scotland over time split by sector", x ="Year", y = "Energy production")
# I have reduced the number of objects needed to created the plot and then shortened the ggplot part of teh code
energy_scotland %>%
filter(sector %in% c("Renewables", "Gas", "Pumped hydro")) %>%
group_by(year) %>%
ggplot(aes(x = year, y = energy_prod, group = sector, colour = sector)) +
geom_line()+
scale_x_continuous(breaks = years) +
labs(title = "Energy production in Scotland over time split by sector", x ="Year", y = "Energy production")
# I have reduced the number of objects needed to created the plot and then shortened the ggplot part of teh code
energy_scotland %>%
filter(sector %in% c("Renewables", "Gas", "Pumped hydro")) %>%
ggplot(aes(x = year, y = energy_prod, colour = sector)) +
geom_line()+
scale_x_continuous(breaks = years) +
labs(title = "Energy production in Scotland over time split by sector", x ="Year", y = "Energy production")
energy_scotland %>%
filter(sector %in% c("Coal", "Gas", "Oil")) %>%
group_by(sector) %>%
summarise(avg_energy_prod = mean(energy_prod))
energy_scotland %>%
filter(sector == c("Coal", "Gas", "Oil")) %>%
group_by(sector) %>%
summarise(avg_energy_prod = mean(energy_prod))
# in the code above R only compares the first element of sector with the entire vector, so I corrected it to make sure that data is filtered as desired and the mean is  calculated properly
energy_scotland %>%
filter(sector %in% c("Coal", "Gas", "Oil")) %>%
group_by(sector) %>%
summarise(avg_energy_prod = mean(energy_prod))
student <- tibble(
Name = c("Brian", "David", "Karen"),
age = c(25, 56, 40),
location = c("Scotland", "England", "scotland"),
`email address` = c("briang@yahoo.co.uk", "dsmith@gmail.co.uk", "karen")
)
student
student %>%
select(name, location, email_address) %>%
janitor::clean_names() %>%
str_to_lower(location)
student %>%
select(name, location, email_address) %>%
janitor::clean_names() %>%
str_to_lower(location) %>%
mutate(valid_email = str_detect(email_address, "@a-z.")
student %>%
select(name, location, email_address) %>%
janitor::clean_names() %>%
str_to_lower(location) %>%
mutate(valid_email = str_detect(email_address, "@a-z."))
student %>%
select(name, location, email_address) %>%
janitor::clean_names() %>%
str_to_lower(locale = location) %>%
mutate(valid_email = str_detect(email_address, "@a-z."))
student %>%
janitor::clean_names() %>%
select(name, location, email_address)
student %>%
janitor::clean_names() %>%
select(name, location, email_address) %>%
# str_to_lower(location) %>%
mutate(valid_email = str_detect(email_address, "@a-z."))
student %>%
janitor::clean_names() %>%
select(name, location, email_address) %>%
# str_to_lower(location) %>%
mutate(valid_email = str_detect(email_address, "@[a-z.]"))
student %>%
janitor::clean_names() %>%
str_to_lower(location) %>%
mutate(valid_email = str_detect(email_address, "@[a-z.]"))
student %>%
janitor::clean_names() %>%
mutate(location = str_to_lower(location)) %>%
mutate(valid_email = str_detect(email_address, "@[a-z.]"))
student %>%
janitor::clean_names() %>%
mutate(location = str_to_lower(location)) %>%
mutate(valid_email = str_detect(email_address, "+@[a-z.]"))
student %>%
janitor::clean_names() %>%
mutate(location = str_to_lower(location)) %>%
mutate(valid_email = str_detect(email_address, "@[a-z.]"))
student %>%
janitor::clean_names() %>%
mutate(location = str_to_lower(location)) %>%
mutate(valid_email = str_detect(email_address, "[a-z0-9_.]+@[a-z.]+"))
student
subsetting_salaries <- function(dataframe_input,job_area_input,salary_input){
data <- dataframe_input %>% select(job_area) %>% filter(job_area == job_area_input)
data1 <- data[data$savings > salary_input, ]
}
subsetting_salaries(CodeClanData::all_salaries, Human Resources, 30000)
View(all_salaries)
salaries <- function(data, job_area_input, salary_input){
job_area_outcome <- data %>% select(job_area) %>%  filter(job_area == job_area_input)
job_area_outcome %>%  filter(savings > salary_input)
}
salaries <- function(data, job_area_input, salary_input){
job_area_outcome <- data %>% select(job_area) %>%  filter(job_area == job_area_input)
job_area_outcome %>%  filter(savings > salary_input)
}
salaries(CodeClanData::all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% select(job_area) %>% mutate(job_area == job_area_input)
data1 <- data[data$savings > salary_input ]
}
subsetting_salaries(CodeClanData::all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% select(job_area) %>% mutate(job_area == job_area_input)
data1 <- data[data$savings > salary_input]
}
subsetting_salaries(CodeClanData::all_salaries, Human Resources, 30000)
pull(data1)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% select(job_area) %>% mutate(job_area == job_area_input)
data1 <- data[data$savings > salary_input]
pull(data1)
}
subsetting_salaries(CodeClanData::all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% select(job_area) %>% mutate(job_area == job_area_input)
data1 <- data[data$savings > salary_input]
print(data1)
}
subsetting_salaries(CodeClanData::all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% select(job_area) %>% mutate(job_area == job_area_input)
data1 <- data[data$savings > salary_input]
print(data1)
}
subsetting_salaries(CodeClanData::all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% select(job_area) %>% mutate(job_area == job_area_input)
data1 <- data$savings > salary_input]
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% select(job_area) %>% mutate(job_area == job_area_input)
data1 <- data$savings > salary_input
print(data1)
}
subsetting_salaries(CodeClanData::all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% select(job_area) %>% mutate(job_area == job_area_input)
data1 <- data$savings > salary_input
}
subsetting_salaries(CodeClanData::all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% select(job_area) %>% mutate(job_area == job_area_input)
data1 <- data$savings > salary_input
}
subsetting_salaries(CodeClanData::all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% select(job_area) %>% mutate(job_area == job_area_input)
data1 <- data$savings > salary_input
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% select(job_area) %>% mutate(job_area == job_area_input)
data1 <- data$savings > salary_input
}
subsetting_salaries(all_salaries, Human Resources, 30000)
data <- dataframe_input %>% mutate(job_area == job_area_input)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% mutate(job_area == job_area_input)
data1 <- data$savings > salary_input
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$savings > salary_input
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$savings > salary_input
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$savings > salary_input
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$savings > salary_input
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$savings > salary_input
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$savings > salary_input
}
one <- subsetting_salaries(all_salaries, "Human Resources", 30000)
one
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$savings > salary_input
print(data1)
}
one <- subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$savings > salary_input
pull(data1)
}
one <- subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$savings > salary_input
pull(data1)
}
one <- subsetting_salaries(all_salaries, "Human Resources", 30000)
all_salaries %>% filter(job_area == 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$savings > salary_input
}
one <- subsetting_salaries(all_salaries, "Human Resources", 30000)
all_salaries %>% filter(job_area == 3000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$savings > salary_input
}
one <- subsetting_salaries(all_salaries, "Human Resources", 30000)
all_salaries %>% filter(job_area == "Human Resources")
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input)
data1 <- data$savings > salary_input
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input)
data1 <- data$savings > salary_input
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data$savings > salary_input
return(data1)
}
one <- subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data$savings > salary_input
return(data1)
}
one <- subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data$savings > salary_input
return(data1)
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data$savings > as.numeric(salary_input)
return(data1)
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data$savings > as.numeric(salary_input)
return(data1)
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data$savings > as_numeric(salary_input)
return(data1)
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as_character(job_area_input))
data1 <- data$savings > as_numeric(salary_input)
return(data1)
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as_character(job_area_input))
data1 <- data$salary > as_numeric(salary_input)
return(data1)
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as_character(job_area_input))
data1 <- data$salary > as_numeric(salary_input)
return(data1)
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as_character(job_area_input))
data1 <- data$salary > as_numeric(salary_input)
return(data1)
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as_character(job_area_input))
data1 <- data$salary > as_numeric(salary_input)
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data$salary > as_numeric(salary_input)
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data$salary > as.numeric(salary_input)
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$salary >salary_input
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$salary > salary_input
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$salary > salary_input
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$salary > salary_input %>% pull()
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data$salary > salary_input %>% pull()
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data %>%  filter(salary > salary_input)
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
all_salaries %>% filter(job_area == "Human Resources") %>% filter
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data %>%  filter(salary > salary_input)
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data %>%  filter(salary > salary_input)
return(data1)
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data %>%  filter(salary > as.numeric(salary_input))
return(data1)
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data %>%  filter(salary > salary_input)
return(data1)
}
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == job_area_input)
data1 <- data %>%  filter(salary > salary_input)
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input)
data1 <- data %>%  filter(salary > as.numeric(salary_input))
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data %>%  filter(salary > as.numeric(salary_input))
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data %>%  filter(salary > as.numeric(salary_input))
return(data1)
}
subsetting_salaries(CodeClanData::all_salaries, "Human Resources", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data %>%  filter(salary > as.numeric(salary_input))
return(data1)
}
subsetting_salaries(CodeClanData::all_salaries, Human Resources, 30000)
CodeClanData::all_salaries
subsetting_salaries(all_salaries, Human Resources, 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data %>%  filter(salary > as.numeric(salary_input))
return(data1)
}
subsetting_salaries(all_salaries, "Human Resources", 30000)
salaries <- function(data, job_area_input, salary_input){
job_area_outcome <- data %>% select(job_area) %>%  filter(job_area == as.character(job_area_input))
job_area_outcome %>%  filter(savings > salary_input)
}
salaries(CodeClanData::all_salaries, "Legal", 30000)
salaries <- function(data, job_area_input, salary_input){
job_area_outcome <- data %>% select(job_area) %>%  filter(job_area == as.character(job_area_input))
job_area_outcome %>%  filter(savings > salary_input)
}
salaries(all_salaries, "Legal", 30000)
subsetting_salaries <- function(dataframe_input, job_area_input, salary_input){
data <- dataframe_input %>% filter(job_area == as.character(job_area_input))
data1 <- data %>%  filter(salary > as.numeric(salary_input))
return(data1)
}
subsetting_salaries(all_salaries, "Legal", 30000)
