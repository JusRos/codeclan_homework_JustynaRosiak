ggplot(aes(x = age, y = cases_sum, group = CancerSite, fill = Sex))+
geom_col(colour = "white")+
theme(
axis.text.x = element_text(angle = 90)
)+
facet_wrap( ~ CancerSite)+
theme_minimal()+
labs(
title = "\nBreast and Prostate Cancers
According to Age and Gender\n",
x = "\nYear\n",
y = "\nCount\n")+
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
title = element_text(face = "bold", size = 16))
cancer_pivot %>%  filter(HB == "S08000016" &
CancerSite != "All cancer types" &
Sex != "All",
CancerSite == "Prostate" |
CancerSite == "Breast") %>%
mutate(age = case_when(
age == "0-5" ~ "39 and under",
age == "5-9" ~ "39 and under",
age == "10-14" ~ "39 and under",
age == "15-19" ~ "39 and under",
age == "20-24" ~ "39 and under",
age == "25-29" ~ "39 and under",
age == "30-34" ~ "39 and under",
age == "35-39" ~ "39 and under",
TRUE ~ age)) %>%
group_by(age, CancerSite, Sex) %>%
summarise(cases_sum = sum(cases_count), .group = "drop") %>%
ggplot(aes(x = age, y = cases_sum, group = CancerSite, fill = Sex))+
geom_col(colour = "white")+
theme(
axis.text.x = element_text(angle = 90)
)+
facet_wrap( ~ CancerSite)+
theme_minimal()+
labs(
title = "\nBreast and Prostate Cancers
According to Age and Gender\n",
x = "\nYear\n",
y = "\nCount\n")+
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
title = element_text(face = "bold", size = 16))
cancer_pivot %>%  filter(HB == "S08000016" &
CancerSite != "All cancer types" &
Sex != "All",
CancerSite == "Prostate" |
CancerSite == "Breast") %>%
mutate(age = case_when(
age == "0-5" ~ "39 and under",
age == "5-9" ~ "39 and under",
age == "10-14" ~ "39 and under",
age == "15-19" ~ "39 and under",
age == "20-24" ~ "39 and under",
age == "25-29" ~ "39 and under",
age == "30-34" ~ "39 and under",
age == "35-39" ~ "39 and under",
TRUE ~ age)) %>%
group_by(age, CancerSite, Sex) %>%
summarise(cases_sum = sum(cases_count), .group = "drop") %>%
ggplot(aes(x = age, y = cases_sum, group = CancerSite, fill = Sex))+
geom_col(colour = "white")+
theme(
axis.text.x = element_text(angle = 90)
)+
facet_wrap( ~ CancerSite)+
theme_minimal()+
labs(
title = "\nBreast and Prostate Cancers
According to Age and Gender\n",
x = "\nYear\n",
y = "\nCount\n")+
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
title = element_text(face = "bold", size = 16))
cancer_pivot %>%  filter(HB == "S08000016" &
CancerSite != "All cancer types" &
Sex != "All",
CancerSite == "Prostate" |
CancerSite == "Breast") %>%
mutate(age = case_when(
age == "0-5" ~ "39 and under",
age == "5-9" ~ "39 and under",
age == "10-14" ~ "39 and under",
age == "15-19" ~ "39 and under",
age == "20-24" ~ "39 and under",
age == "25-29" ~ "39 and under",
age == "30-34" ~ "39 and under",
age == "35-39" ~ "39 and under",
TRUE ~ age)) %>%
group_by(age, CancerSite, Sex) %>%
summarise(cases_sum = sum(cases_count), .group = "drop") %>%
ggplot(aes(x = age, y = cases_sum, group = CancerSite, fill = Sex))+
geom_col(colour = "white")+
theme(
axis.text.x = element_text(angle = 90)
)+
facet_wrap( ~ CancerSite)+
theme_minimal()+
labs(
title = "\nBreast and Prostate Cancers
According to Age and Gender\n",
x = "\nYear\n",
y = "\nCount\n")+
theme(
axis.text.x = element_text(angle = 90, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
title = element_text(face = "bold", size = 16))
library(tidyverse)
library(tsibbledata)
library(tsibble)
library(dplyr)
library(ggplot2)
library(sf)
library(lubridate)
library(leaflet)
nyc_bikes_df <- nyc_bikes
# Dividing start time into 4 columns: *year, month, day and weekday.*
nyc_bikes_df <- nyc_bikes_df %>%
mutate(year = year(start_time),
month = month(start_time, label = TRUE, abbr = TRUE),
day = day(start_time),
weekday = wday(start_time, label = TRUE, abbr = TRUE)
)
# Add a *date* column.
nyc_bikes_df <- nyc_bikes_df %>% mutate(date = as_date(ymd_hms(start_time)))
# Add *hire_length* column.
nyc_bikes_df <- nyc_bikes_df %>% mutate(hire_length = as.period(stop_time - start_time))
# Add *age* column and change to NA those who's age is over 126 (the highest age recorded so far in history is 123) and then drop them as there were only 2.
nyc_bikes_df <- nyc_bikes_df %>% mutate(age = 2018 - birth_year) %>% mutate(age = if_else(age > 126, NA, age)) %>% drop_na(age)
# Divide *starting_time* to *hour*, *minute* and *second* columns.
nyc_bikes_df <- nyc_bikes_df %>%
mutate(hour = hour(hire_length),
minute = minute(hire_length),
second = second(hire_length)) %>%
mutate(length_minutes = round(hour * 60 + minute + second/60))
# Create new column *age_range*.
nyc_bikes_df <- nyc_bikes_df %>%
mutate(age_range = case_when(
age < 19 ~ "18 or less",
age >= 19 & age < 30 ~ "19 to 29",
age >= 30 & age < 40 ~ "30 to 39",
age >= 40 & age < 50 ~ "40 to 49",
age >= 50 & age < 60 ~ "50 to 59",
age >= 60 ~ "60 or over"
))
# Create a column *season*.
nyc_bikes_df <- nyc_bikes_df %>% mutate(season = case_when(
month %in% c("Dec", "Jan", "Feb") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
month %in% c("Sep", "Oct", "Nov") ~ "Autumn"
))
# Assign colour palette to an object called *colour_scheme*, so all visualisations are uniform.
colour_scheme <-  c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
nyc_bikes_tibble <- as_tibble(nyc_bikes_df)
start_stations <- nyc_bikes_tibble %>%
select(start_station , start_lat, start_long) %>%
group_by(start_station) %>%
summarise(start_long = first(start_long),
start_lat = first(start_lat))
leaflet(start_stations) %>%
addTiles() %>%
addMarkers(
lng = ~ start_long,
lat = ~ start_lat,
clusterOptions = markerClusterOptions(),
icon = icons(iconUrl = "https://play-lh.googleusercontent.com/nU9hlehhCfKL3UVhtOVnKJIRU3967x2ivi5m4Ny5VDY2vcDTwK2_b_KLGpnx1C-alWU",iconWidth = 30, iconHeight = 30), label = ~start_station)
nyc_bikes_df %>%
ggplot()+
geom_bar(aes(x = month, fill = type))+
theme(axis.text = element_text(size = 12))+
scale_fill_manual(values = colour_scheme)+
theme_minimal()+
labs(
title = "\nBike hires by month and type\n",
x = "\nDay of the week\n",
y = "\nCount\n"
)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
nyc_bikes_df %>% filter(season == "Summer" | season == "Winter") %>%
ggplot(aes(x = weekday, fill = type))+
geom_bar()+
facet_grid(~ season)+
theme(axis.text = element_text(size = 12))+
scale_fill_manual(values = colour_scheme)+
theme_minimal()+
labs(
title = "\nBike hires distribution across the week depending on the season\n",
x = "\nDay of the week\n",
y = "\nCount\n")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
nyc_bikes_df %>% filter(gender == "Male" | gender == "Female") %>% filter(type == "Subscriber") %>% filter(season == "Summer" | season == "Winter") %>%
ggplot(aes(x = age_range, fill = gender))+
geom_bar(position = "dodge")+
facet_grid(~season)+
theme(axis.text = element_text(size = 12))+
scale_fill_manual(values = colour_scheme)+
theme_minimal()+
labs(
title = "\nRegular user bike hires by season, age range and gender\n",
x = "\nAge range\n",
y = "\nCount\n")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
nyc_bikes_df %>% filter(gender == "Male" | gender == "Female") %>% filter(type == "Customer") %>% filter(season == "Summer" | season == "Winter") %>%
ggplot(aes(x = age_range, fill = gender))+
geom_bar(position = "dodge")+
facet_grid(~season)+
theme(axis.text = element_text(size = 12))+
scale_fill_manual(values = colour_scheme)+
theme_minimal()+
labs(
title = "\nCasual user bike hires by season, age range and gender\n",
x = "\nAge\n",
y = "\nCount\n")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE )
library(tidyverse)
library(tsibbledata)
library(tsibble)
library(dplyr)
library(ggplot2)
library(sf)
library(lubridate)
library(leaflet)
nyc_bikes_df <- nyc_bikes
# Dividing start time into 4 columns: *year, month, day and weekday.*
nyc_bikes_df <- nyc_bikes_df %>%
mutate(year = year(start_time),
month = month(start_time, label = TRUE, abbr = TRUE),
day = day(start_time),
weekday = wday(start_time, label = TRUE, abbr = TRUE)
)
# Add a *date* column.
nyc_bikes_df <- nyc_bikes_df %>% mutate(date = as_date(ymd_hms(start_time)))
# Add *hire_length* column.
nyc_bikes_df <- nyc_bikes_df %>% mutate(hire_length = as.period(stop_time - start_time))
# Add *age* column and change to NA those who's age is over 126 (the highest age recorded so far in history is 123) and then drop them as there were only 2.
nyc_bikes_df <- nyc_bikes_df %>% mutate(age = 2018 - birth_year) %>% mutate(age = if_else(age > 126, NA, age)) %>% drop_na(age)
# Divide *starting_time* to *hour*, *minute* and *second* columns.
nyc_bikes_df <- nyc_bikes_df %>%
mutate(hour = hour(hire_length),
minute = minute(hire_length),
second = second(hire_length)) %>%
mutate(length_minutes = round(hour * 60 + minute + second/60))
# Create new column *age_range*.
nyc_bikes_df <- nyc_bikes_df %>%
mutate(age_range = case_when(
age < 19 ~ "18 or less",
age >= 19 & age < 30 ~ "19 to 29",
age >= 30 & age < 40 ~ "30 to 39",
age >= 40 & age < 50 ~ "40 to 49",
age >= 50 & age < 60 ~ "50 to 59",
age >= 60 ~ "60 or over"
))
# Create a column *season*.
nyc_bikes_df <- nyc_bikes_df %>% mutate(season = case_when(
month %in% c("Dec", "Jan", "Feb") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
month %in% c("Sep", "Oct", "Nov") ~ "Autumn"
))
# Assign colour palette to an object called *colour_scheme*, so all visualisations are uniform.
colour_scheme <-  c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE )
library(tidyverse)
library(tsibbledata)
library(tsibble)
library(dplyr)
library(ggplot2)
library(sf)
library(lubridate)
library(leaflet)
nyc_bikes_df <- nyc_bikes
# Dividing start time into 4 columns: *year, month, day and weekday.*
nyc_bikes_df <- nyc_bikes_df %>%
mutate(year = year(start_time),
month = month(start_time, label = TRUE, abbr = TRUE),
day = day(start_time),
weekday = wday(start_time, label = TRUE, abbr = TRUE)
)
# Add a *date* column.
nyc_bikes_df <- nyc_bikes_df %>% mutate(date = as_date(ymd_hms(start_time)))
# Add *hire_length* column.
nyc_bikes_df <- nyc_bikes_df %>% mutate(hire_length = as.period(stop_time - start_time))
# Add *age* column and change to NA those who's age is over 126 (the highest age recorded so far in history is 123) and then drop them as there were only 2.
nyc_bikes_df <- nyc_bikes_df %>% mutate(age = 2018 - birth_year) %>% mutate(age = if_else(age > 126, NA, age)) %>% drop_na(age)
# Divide *starting_time* to *hour*, *minute* and *second* columns.
nyc_bikes_df <- nyc_bikes_df %>%
mutate(hour = hour(hire_length),
minute = minute(hire_length),
second = second(hire_length)) %>%
mutate(length_minutes = round(hour * 60 + minute + second/60))
# Create new column *age_range*.
nyc_bikes_df <- nyc_bikes_df %>%
mutate(age_range = case_when(
age < 19 ~ "18 or less",
age >= 19 & age < 30 ~ "19 to 29",
age >= 30 & age < 40 ~ "30 to 39",
age >= 40 & age < 50 ~ "40 to 49",
age >= 50 & age < 60 ~ "50 to 59",
age >= 60 ~ "60 or over"
))
# Create a column *season*.
nyc_bikes_df <- nyc_bikes_df %>% mutate(season = case_when(
month %in% c("Dec", "Jan", "Feb") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
month %in% c("Sep", "Oct", "Nov") ~ "Autumn"
))
# Assign colour palette to an object called *colour_scheme*, so all visualisations are uniform.
colour_scheme <-  c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
nyc_bikes_tibble <- as_tibble(nyc_bikes_df)
start_stations <- nyc_bikes_tibble %>%
select(start_station , start_lat, start_long) %>%
group_by(start_station) %>%
summarise(start_long = first(start_long),
start_lat = first(start_lat))
leaflet(start_stations) %>%
addTiles() %>%
addMarkers(
lng = ~ start_long,
lat = ~ start_lat,
clusterOptions = markerClusterOptions(),
icon = icons(iconUrl = "https://play-lh.googleusercontent.com/nU9hlehhCfKL3UVhtOVnKJIRU3967x2ivi5m4Ny5VDY2vcDTwK2_b_KLGpnx1C-alWU",iconWidth = 30, iconHeight = 30), label = ~start_station)
nyc_bikes_df %>%
ggplot()+
geom_bar(aes(x = month, fill = type))+
theme(axis.text = element_text(size = 12))+
scale_fill_manual(values = colour_scheme)+
theme_minimal()+
labs(
title = "\nBike hires by month and type\n",
x = "\nDay of the week\n",
y = "\nCount\n"
)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
nyc_bikes_df %>% filter(season == "Summer" | season == "Winter") %>%
ggplot(aes(x = weekday, fill = type))+
geom_bar()+
facet_grid(~ season)+
theme(axis.text = element_text(size = 12))+
scale_fill_manual(values = colour_scheme)+
theme_minimal()+
labs(
title = "\nBike hires distribution across the week depending on the season\n",
x = "\nDay of the week\n",
y = "\nCount\n")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
nyc_bikes_df %>% filter(gender == "Male" | gender == "Female") %>% filter(type == "Subscriber") %>% filter(season == "Summer" | season == "Winter") %>%
ggplot(aes(x = age_range, fill = gender))+
geom_bar(position = "dodge")+
facet_grid(~season)+
theme(axis.text = element_text(size = 12))+
scale_fill_manual(values = colour_scheme)+
theme_minimal()+
labs(
title = "\nRegular user bike hires by season, age range and gender\n",
x = "\nAge range\n",
y = "\nCount\n")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE)
# Load the knitrBootstrap package
library(knitrBootstrap)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE)
# Load the knitrBootstrap package
# Set the collapse option to TRUE
library(tidyverse)
library(tsibbledata)
library(tsibble)
library(dplyr)
library(ggplot2)
library(sf)
library(lubridate)
library(leaflet)
nyc_bikes_df <- nyc_bikes
# Dividing start time into 4 columns: *year, month, day and weekday.*
nyc_bikes_df <- nyc_bikes_df %>%
mutate(year = year(start_time),
month = month(start_time, label = TRUE, abbr = TRUE),
day = day(start_time),
weekday = wday(start_time, label = TRUE, abbr = TRUE)
)
# Add a *date* column.
nyc_bikes_df <- nyc_bikes_df %>% mutate(date = as_date(ymd_hms(start_time)))
# Add *hire_length* column.
nyc_bikes_df <- nyc_bikes_df %>% mutate(hire_length = as.period(stop_time - start_time))
# Add *age* column and change to NA those who's age is over 126 (the highest age recorded so far in history is 123) and then drop them as there were only 2.
nyc_bikes_df <- nyc_bikes_df %>% mutate(age = 2018 - birth_year) %>% mutate(age = if_else(age > 126, NA, age)) %>% drop_na(age)
# Divide *starting_time* to *hour*, *minute* and *second* columns.
nyc_bikes_df <- nyc_bikes_df %>%
mutate(hour = hour(hire_length),
minute = minute(hire_length),
second = second(hire_length)) %>%
mutate(length_minutes = round(hour * 60 + minute + second/60))
# Create new column *age_range*.
nyc_bikes_df <- nyc_bikes_df %>%
mutate(age_range = case_when(
age < 19 ~ "18 or less",
age >= 19 & age < 30 ~ "19 to 29",
age >= 30 & age < 40 ~ "30 to 39",
age >= 40 & age < 50 ~ "40 to 49",
age >= 50 & age < 60 ~ "50 to 59",
age >= 60 ~ "60 or over"
))
# Create a column *season*.
nyc_bikes_df <- nyc_bikes_df %>% mutate(season = case_when(
month %in% c("Dec", "Jan", "Feb") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
month %in% c("Sep", "Oct", "Nov") ~ "Autumn"
))
# Assign colour palette to an object called *colour_scheme*, so all visualisations are uniform.
colour_scheme <-  c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE)
nyc_bikes_tibble <- as_tibble(nyc_bikes_df)
start_stations <- nyc_bikes_tibble %>%
select(start_station , start_lat, start_long) %>%
group_by(start_station) %>%
summarise(start_long = first(start_long),
start_lat = first(start_lat))
leaflet(start_stations) %>%
addTiles() %>%
addMarkers(
lng = ~ start_long,
lat = ~ start_lat,
clusterOptions = markerClusterOptions(),
icon = icons(iconUrl = "https://play-lh.googleusercontent.com/nU9hlehhCfKL3UVhtOVnKJIRU3967x2ivi5m4Ny5VDY2vcDTwK2_b_KLGpnx1C-alWU",iconWidth = 30, iconHeight = 30), label = ~start_station)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE)
nyc_bikes_df %>%
ggplot()+
geom_bar(aes(x = month, fill = type))+
theme(axis.text = element_text(size = 12))+
scale_fill_manual(values = colour_scheme)+
theme_minimal()+
labs(
title = "\nBike hires by month and type\n",
x = "\nDay of the week\n",
y = "\nCount\n"
)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE)
nyc_bikes_df %>% filter(season == "Summer" | season == "Winter") %>%
ggplot(aes(x = weekday, fill = type))+
geom_bar()+
facet_grid(~ season)+
theme(axis.text = element_text(size = 12))+
scale_fill_manual(values = colour_scheme)+
theme_minimal()+
labs(
title = "\nBike hires distribution across the week depending on the season\n",
x = "\nDay of the week\n",
y = "\nCount\n")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE)
nyc_bikes_df %>% filter(gender == "Male" | gender == "Female") %>% filter(type == "Subscriber") %>% filter(season == "Summer" | season == "Winter") %>%
ggplot(aes(x = age_range, fill = gender))+
geom_bar(position = "dodge")+
facet_grid(~season)+
theme(axis.text = element_text(size = 12))+
scale_fill_manual(values = colour_scheme)+
theme_minimal()+
labs(
title = "\nRegular user bike hires by season, age range and gender\n",
x = "\nAge range\n",
y = "\nCount\n")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
collapse = TRUE)
nyc_bikes_df %>% filter(gender == "Male" | gender == "Female") %>% filter(type == "Customer") %>% filter(season == "Summer" | season == "Winter") %>%
ggplot(aes(x = age_range, fill = gender))+
geom_bar(position = "dodge")+
facet_grid(~season)+
theme(axis.text = element_text(size = 12))+
scale_fill_manual(values = colour_scheme)+
theme_minimal()+
labs(
title = "\nCasual user bike hires by season, age range and gender\n",
x = "\nAge\n",
y = "\nCount\n")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
