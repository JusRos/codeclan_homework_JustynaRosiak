library(tidyverse)
library(tidyverse)
titanic <- read_csv("data/titanic.csv")
library(tidyverse)
library(janitor)
titanic <- read_csv("data/titanic.csv")
library(tidyverse)
library(janitor)
library(gtools)
titanic <- read_csv("data/titanic.csv")
library(tidyverse)
library(janitor)
library(gtools)
titanic <- read_csv("data/titanic.csv")
source("../../../../codeclan_work/week _06/day_1/prob.R")
View(titanic)
titanic %>% ditinct(class)
titanic %>% distinct(class)
titanic %>% distinct(class) %>% mutate(crew = if_else(class %in% c("1st", "2nd", "3rd"), FAlse, TRUE))
titanic %>% distinct(class) %>% mutate(crew = if_else(class %in% c("1st", "2nd", "3rd"), FALSE, TRUE))
titanic %>% mutate(crew = if_else(class %in% c("1st", "2nd", "3rd"), FALSE, TRUE))
titanic <- titanic %>% mutate(crew = if_else(class %in% c("1st", "2nd", "3rd"), FALSE, TRUE))
titanic %>% filter(crew == TRUE & survived == "yes")
titanic %>% filter(crew == TRUE & survived == "yes") %>%
summarise(p = n()/nrow(titanic))
titanic <- filter( crew == FALSE & survived == "yes") %>%
summarise(p = n()/ nrow(titanic))
titanic <- filter( crew == FALSE & survived == "yes") %>%
summarise(p = n()/ nrow(titanic))
titanic <- filter(crew == FALSE & survived == "yes") %>%
summarise(p = n()/ nrow(titanic))
titanic_new <- titanic %>% mutate(crew = if_else(class %in% c("1st", "2nd", "3rd"), FALSE, TRUE))
titanic_new <- filter(crew == FALSE & survived == "yes") %>%
summarise(p = n()/ nrow(titanic))
titanic_new <- filter(crew == FALSE & survived == "yes") %>%
summarise(p = n()/ nrow(titanic))
titanic_new <- titanic %>% mutate(crew = if_else(class %in% c("1st", "2nd", "3rd"), FALSE, TRUE))
titanic_new <- filter(crew == FALSE & survived == "yes") %>%
summarise(p = n()/ nrow(titanic))
titanic_new %>% filter(crew == FALSE & survived == "yes") %>%
summarise(p = n()/ nrow(titanic))
rolldie(6, c(1:4))
rolldie(1, c(1:4))
rolldie(1)
rolldie(1, 6)
2/3
s_three_dice <- rolldie(3)
s_three_dice <- rolldie(3)
s_three_dice
rolldie(4)
s_four_dice <- rolldie(4)
s_four_dice
s_four_coins <- tosscoin(4)
s_four_coins <- s_four_coins %>%
unite(result, toss1:toss4, remove = FALSE) %>%
mutate(n_heads = str_count(result, "H"))
# simple event all outcomes equally likely
s_four_coins %>%
filter(n_heads == 0) %>%
summarise(p = n()/nrow(s_four_coins))
s_four_dice <- rolldie(4)
s_four_dice
s_four_dice %>% unite(total = X1:X4, remove = FALSE )
s_four_dice <- rolldie(4)
s_four_dice
s_four_dice %>% unite(total, X1:X4, remove = FALSE )
s_four_dice <- rolldie(4)
s_four_dice
s_four_dice %>% filter ( X1+X2+X3+x4 == 5 | X1+X2+X3+X4 == 6 | X1+X2+X3+X4 == 7)
s_four_dice <- rolldie(4)
s_four_dice
s_four_dice %>% filter ( X1+X2+X3+X4 == 5 | X1+X2+X3+X4 == 6 | X1+X2+X3+X4 == 7)
s_four_dice %>% filter ( X1+X2+X3+X4 == 5 | X1+X2+X3+X4 == 6 | X1+X2+X3+X4 == 7) %>%
summarise(p = n()/nrow(s_four_dice))
s_four_dice <- rolldie(4)
s_four_dice
s_four_dice %>% filter ( X1+X2+X3+X4 == 5 | X1+X2+X3+X4 == 6 | X1+X2+X3+X4 == 7) %>%
summarise(p = n()/nrow(s_four_dice))
s_four_dice %>% filter(rowSums(.) %in% c(5, 6, 7)) %>%
summarise(p = n()/nrow(s_four_dice))
s_four_dice <- rolldie(4)
s_four_dice
s_four_dice %>% filter(X1+X2+X3+X4 == 5 | X1+X2+X3+X4 == 6 | X1+X2+X3+X4 == 7) %>%
summarise(p = n()/nrow(s_four_dice))
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- unite( )
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- unite( )
View(sitting_order)
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- unite(height_options, V1:V5)
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- unite(height_options, V1:V5, sep = "_", remove = FALSE)
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- unite(height_options,c(V1:V5), sep = "_", remove = FALSE)
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- unite(height_options,c(V1:V5), sep = "_", remove = FALSE)
library(gtools)
hiring <- permutations(10, r = 3,
v = candidates,
repeats.allowed = FALSE) %>%
as_tibble()
library(gtools)
hiring <- permutations(10, r = 3,
v = candidates,
repeats.allowed = FALSE) %>%
as_tibble()
library(gtools)
hiring <- permutations(10, r = 3,
v = candidates,
repeats.allowed = FALSE) %>%
as_tibble()
library(tidyverse)
s_two_dice <- rolldie(2,6)
p_roll_seven <- s_two_dice %>%
filter(X1 + X2 == 7) %>%
summarise(p = n()/nrow(s_two_dice))
p_roll_seven
10*9*8
candidates <- c("Colin", "David", "Naomi" , "Emma", "Thijmen", "Chiara", "Alis", "Tom", "Weezay", "Justyna")
library(gtools)
hiring <- permutations(10, r = 3,
v = candidates,
repeats.allowed = FALSE) %>%
as_tibble()
hiring
hiring <- hiring %>%
rename(Analyst = V1,
Scientist = V2,
Engineer = V3
)
hiring %>%
unite(choices, c(Analyst, Scientist, Engineer), sep = "_", remove = FALSE) %>%
filter(str_detect(choices, "Colin") & str_detect(choices, "David"))
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE)
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE)
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
filter(str_detect(height, "1.2_1.3_1.4_1.5_1.6") | str_detect(height, "1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
filter(str_detect(height, str_detect(height, "1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
filter(str_detect(height, str_detect(height, "1.6_1.5_1.4_1.3_1.2")))
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
filter(str_detect(height, str_detect(height, "1.6_1.5_1.4_1.3_1.2")))
sitting_orde
sitting_order
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
filter(height == str_detect(height, str_detect(height, "1.6_1.5_1.4_1.3_1.2")))
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
str_detect(height, str_detect(height, "1.6_1.5_1.4_1.3_1.2")))
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
str_detect(height, str_detect(height, "1.6_1.5_1.4_1.3_1.2"))
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
filter(height == str_detect(height, "1.6_1.5_1.4_1.3_1.2"))
sitting
View(sitting_order)
View(sitting)
View(sitting)
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE)
%>%
sitting_order <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE)
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
%>% filter(height == str_detect(height, "1.6_1.5_1.4_1.3_1.2"))
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
filter(height == str_detect(height, "1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
filter(height == str_detect(height, "1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
filter(height == str_detect(height, "1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE) %>%
filter(height == str_detect(height, "1.6_1.5_1.4_1.3_1.2"))
sitting
View(sitting_order)
View(sitting_order)
View(sitting)
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
height_added <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE)
%>%
View(hiring)
View(height_added)
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
height_added <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE)
height_added %>%
filter(height == str_detect(height, "1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
height_added <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE)
height_added %>%
filter(height == str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
height_added <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE)
height_added %>%
filter(height == str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
height_added <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE)
height_added %>%
filter(height == str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
height_added <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE)
height_added %>%
filter(height == str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
height_added <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE)
height_added %>%
filter(height == str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
height_added <- sitting_order %>% unite(height,c(V1:V5), sep = "_", remove = FALSE)
height_added %>%
filter(height == str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting
sitting_order
View(sitting_order)
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting_order %>% unite(height, c(V1:V5), sep = "_", remove = FALSE) %>%
filter(height == str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting_order %>% unite(height, c(V1:V5), sep = "_", remove = TRUE) %>%
filter(height == str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = TRUE) %>%
as_tibble()
sitting_order %>% unite(height, c(V1:V5), sep = "_", remove = TRUE) %>%
filter(height == str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting
View(sitting_order)
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting_order %>% unite(height, c(V1:V5), sep = "_", remove = TRUE) %>%
filter(height == str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting_order %>% unite(height, c(V1:V5), sep = "_", remove = TRUE) %>%
filter(str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting_order %>% unite(height, c(V1:V5), sep = "_", remove = TRUE) %>%
filter(str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting_order %>% unite(height, c(V1:V5), sep = "_", remove = TRUE) %>%
filter(str_detect(height,"1.6_1.5_1.4_1.3_1.2"))
sitting_order %>% unite(height, c(V1:V5), sep = "_", remove = TRUE) %>%
filter(str_detect(height,"1.6_1.5_1.4_1.3_1.2")) %>%
sumamrise(n(/nrow(sitting_order)))
sitting_order %>% unite(height, c(V1:V5), sep = "_", remove = TRUE) %>%
filter(str_detect(height,"1.6_1.5_1.4_1.3_1.2")) %>%
sumamrise(n(/nrow(sitting_order)))
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting_order %>% unite(height, c(V1:V5), sep = "_", remove = TRUE) %>%
filter(str_detect(height,"1.6_1.5_1.4_1.3_1.2")) %>%
sumamrise(n()/nrow(sitting_order))
height <- c( 1.2, 1.3, 1.4, 1.5, 1.6)
sitting_order <- permutations(n = 5, r = 5, v = height, repeats.allowed = FALSE) %>%
as_tibble()
sitting_order %>% unite(height, c(V1:V5), sep = "_", remove = TRUE) %>%
filter(str_detect(height,"1.6_1.5_1.4_1.3_1.2")) %>%
summarise(n()/nrow(sitting_order))
View(isin)
rolldie(6)
A <- c(1:6)
s_six_dice <-
A <- c(1:6)
s_six_dice <- filter(isin(., c(1:6), ordered = FALSE))
A <- c(1:6)
s_six_dice %>% filter(isin(., c(1:6), ordered = FALSE))
s_six_dice <- rolldie(6)
A <- c(1:6)
s_six_dice %>% filter(isin(., c(1:6), ordered = FALSE))
s_six_dice %>% filter(isin(., c(1:6), ordered = FALSE)) %>%
summarise(p = n()/nrow(s_six_dice))
A <- c(1:6)
s_six_dice %>% filter(isin(., c(6:1), ordered = FALSE)) %>%
summarise(p = n()/nrow(s_six_dice))
A <- c(1:6)
s_six_dice %>% filter(isin(., c(6:1), ordered = TRUE)) %>%
summarise(p = n()/nrow(s_six_dice))
s_six_dice %>% filter(isin(., c(6:1), ordered = TRUE))
s_six_dice %>% filter(isin(., c(6:1), ordered = TRUE)) %>%
summarise(p = n()/nrow(s_six_dice))
s_six_dice <- rolldie(6)
s_six_dice
s_six_dice %>% filter(isin(., c(6:1), ordered = FALSE)) %>%
summarise(p = n()/nrow(s_six_dice))
View(cards)
View(cards)
s_two_dice <- rolldie(2)
s_two_dice %>%
filter(X1 == 2 | X1 == 4 | X1 == 6 | X2 == 5) %>%
# or filter(X1 %in% c(2,4,6,) | X2 == 5)
summarise(p = n()/nrow(s_two_dice))
titanic_new %>% filter(crew == TRUE & survived == "yes") %>%
summarise(p = n()/nrow(titanic_new))
library(tidyverse)
library(janitor)
library(gtools)
titanic <- read_csv("data/titanic.csv")
source("../../../../codeclan_work/week _06/day_1/prob.R")
library(tidyverse)
library(janitor)
library(gtools)
titanic <- read_csv("data/titanic.csv")
source("../../../../codeclan_work/week _06/day_1/prob.R")
titanic_new %>% filter(crew == TRUE & survived == "yes") %>%
summarise(p = n()/nrow(titanic_new))
titanic_new %>% filter(crew == TRUE & survived == "yes") %>%
summarise(p = n()/nrow(titanic_new))
titanic_new %>% filter(crew == FALSE & survived == "yes") %>%
summarise(p = n()/ nrow(titanic))
titanic_new %>% filter(crew == TRUE & survived == "yes") %>%
summarise(p = n()/nrow(titanic_new))
titanic_new <- titanic %>% mutate(crew = if_else(class %in% c("1st", "2nd", "3rd"), FALSE, TRUE))
titanic_new %>% filter(crew == TRUE & survived == "yes") %>%
summarise(p = n()/nrow(titanic_new))
titanic_new %>% filter(crew == FALSE & survived == "yes") %>%
summarise(p = n()/ nrow(titanic_new))
