library(tidyverse)
library(skimr)
items <- read_csv("data/20190928-items.csv") %>% janitor::clean_names()
skim(items)
head(items)
top_brand <- items %>%
group_by(brand) %>%
summarise(brand_count = n()) %>%
arrange(desc(brand_count)) %>%
head(n=1)
top_brand
items %>% filter(brand == "Samsung") %>%
ggplot(aes(x = rating))+
geom_histogram(col = "white", bins = 25)
samsung_rating <- items %>% filter(brand == "Samsung") %>% select(rating)
samsung_rating
# uniform
f_sams = dunif(x = samsung_rating, min = 1, max = 5)
# uniform
f_s = dunif(x = samsung_rating, min = 1, max = 5)
items %>% filter(brand == "Samsung") %>%
ggplot(aes(x = rating))+
geom_histogram(col = "white", bins = 25)
samsung_rating <- items %>% filter(brand == "Samsung") %>% select(rating) %>% pull()
# uniform
f_s = dunif(x = samsung_rating, min = 1, max = 5)
# cumulative
f_s
# uniform
samsung <- tibble(
l = samsung_rating,
f_s = dunif(x = samsung_rating, min = 1, max = 5))
# uniform
samsung <- tibble(
l = samsung_rating,
f_l = dunif(x = samsung_rating, min = 1, max = 5))
samsung %>%
ggplot(aes( x= l, y = f_l))
# cumulative
# uniform
samsung <- tibble(
l = samsung_rating,
f_l = dunif(x = samsung_rating, min = 1, max = 5))
samsung %>%
ggplot(aes( x= l, y = f_l))+
ylim(0,0.1)+
labs(
x = "rating",
y = "f_l(probability density)"
)
# cumulative
# uniform
samsung <- tibble(
l = samsung_rating,
f_l = dunif(x = samsung_rating, min = 1, max = 5))
samsung %>%
ggplot(aes(x = l, y = f_l))+
ylim(0,0.1)+
labs(
x = "rating",
y = "f_l(probability density)"
)
# cumulative
# uniform
samsung <- tibble(
l = samsung_rating,
f_l = dunif(x = samsung_rating, min = 1, max = 5))
samsung %>%
ggplot(aes(x = l, y = f_l))+
ylim(0,0.075)+
labs(
x = "rating",
y = "f_l(probability density)"
)
# cumulative
# uniform
samsung <- tibble(
l = samsung_rating,
f_l = dunif(x = samsung_rating, min = 1, max = 5))
samsung %>%
ggplot(aes(x = l, y = f_l))+
ylim(0,0.075)+
labs(
x = "rating",
y = "f_l(probability density)"
)
# cumulative
samsung
# uniform
samsung <- tibble(
l = samsung_rating,
f_l = dunif(x = samsung_rating, min = 1, max = 5))
samsung %>%
ggplot(aes(x = l, y = f_l))+
ylim(0,0.25)+
labs(
x = "rating",
y = "f_l(probability density)"
)
# cumulative
samsung <- tibble(
l = samsung_rating,
f_l = dunif(x = l, min = 1, max = 5))
samsung
brain_breaks <- tibble(
l = seq(4, 23, by = 0.001),
f_l = dunif(x = l, min = 5, max = 22)
)
brain_breaks
samsung %>% distinct(f_l)
samsung_rating
# uniform
samsung <- tibble(
l = samsung_rating,
f_l = dunif(x = l, min = 1, max = 5))
samsung %>%
ggplot(aes(x = l, y = f_l))+
geim_line()+
ylim(0,0.25)+
labs(
x = "rating",
y = "f_l(probability density)"
)
# uniform
samsung <- tibble(
l = samsung_rating,
f_l = dunif(x = l, min = 1, max = 5))
samsung %>%
ggplot(aes(x = l, y = f_l))+
geom_line()+
ylim(0,0.25)+
labs(
x = "rating",
y = "f_l(probability density)"
)
# cumulative
items %>% filter(brand == "Samsung") %>%
ggplot(aes(x = rating))+
geom_histogram(col = "white", bins = 25)
samsung_rating <- items %>% filter(brand == "Samsung") %>% select(rating) %>% pull()
samsung %>%
ggplot(aes(x = l, y = f_l))+
geom_line(line = 2)+
ylim(0,0.25)+
labs(
x = "rating",
y = "f_l(probability density)"
)
samsung %>%
ggplot(aes(x = l, y = f_l))+
geom_line(line = 4)+
ylim(0,0.25)+
labs(
x = "rating",
y = "f_l(probability density)"
)
samsung %>%
ggplot(aes(x = l, y = f_l))+
geom_line(size = 2)+
ylim(0,0.25)+
labs(
x = "rating",
y = "f_l(probability density)"
)
View(top_brand)
View(top_brand)
View(samsung)
View(items)
View(brain_breaks)
View(samsung)
View(samsung)
View(samsung)
# counting mean and sd for samsung ratings
samsung %>% mutate(mean = mean(l),
sd = sd(l))
# counting mean and sd for samsung ratings
samsung %>% mutate(mean = mean(l),
samsung_mean <- samsung %>% mean(l)
# counting mean and sd for samsung ratings
samsung %>% mutate(mean = mean(l)
samsung_mean <- samsung %>% mean(l)
# counting mean and sd for samsung ratings
samsung_mean <- samsung %>% mean(l)
samsung_sd <- samsung %>% sd(l)
View(samsung)
# counting mean and sd for samsung ratings
samsung_mean <- samsung %>% mean(samsung)
samsung_sd <- samsung %>% sd(samsung)
# counting mean and sd for samsung ratings
samsung_mean <- samsung %>% mean(samsung)
samsung_sd <- samsung %>% sd(samsung)
# counting mean and sd for samsung ratings
samsung_mean <- mean(samsung_rating)
samsung_sd <- sd(samsung_rating)
items %>% filter(brand == "Samsung") %>%
ggplot(aes(x = rating))+
geom_histogram(col = "white", bins = 25)+
stat_function(
fun = dnorm,
args = list(mean = samsung_mean, sd = samsung_sd), col = "blue"
)
# counting mean and sd for samsung ratings
samsung_mean <- mean(samsung_rating)
samsung_sd <- sd(samsung_rating)
# fitting a normal distribution to a data set
items %>% filter(brand == "Samsung") %>%
ggplot(aes(x = rating))+
geom_histogram(aes(y = after_stat(density)), col = "white", bins = 25)+
stat_function(
fun = dnorm,
args = list(mean = samsung_mean, sd = samsung_sd), col = "blue"
)
# counting mean and sd for samsung ratings
samsung_mean <- mean(samsung_rating)
samsung_sd <- sd(samsung_rating)
# fitting a normal distribution to a data set
items %>% filter(brand == "Samsung") %>%
ggplot(aes(x = rating))+
geom_histogram(aes(y = after_stat(density)), col = "white", bins = 25)+
stat_function(
fun = dnorm,
args = list(mean = samsung_mean, sd = samsung_sd), col = "red"
)
View(samsung)
samsung %>%
summarise(skewaeness = skewness(l, type = 1))
library(e1071)
samsung %>%
summarise(skeweness = skewness(l, type = 1))
library(e1071)
samsung %>%
summarise(skeweness = skewness(l, type = 1))
samsung %>%
ggplot(aes(x = l))+
gem_boxplot()
samsung %>%
ggplot(aes(x = l))+
geom_boxplot()
items %>% filter(brand == "Samsung") %>%
ggplot(aes(x = rating))+
geom_histogram(col = "white", bins = 25)
samsung_rating <- items %>% filter(brand == "Samsung") %>% select(rating) %>% pull()
# counting mean and sd for samsung ratings
samsung_mean <- mean(samsung_rating)
samsung_sd <- sd(samsung_rating)
# fitting a normal distribution to a data set
items %>% filter(brand == "Samsung") %>%
ggplot(aes(x = rating))+
geom_histogram(aes(y = after_stat(density)), col = "white", bins = 25)+
stat_function(
fun = dnorm,
args = list(mean = samsung_mean, sd = samsung_sd), col = "red"
)
View(samsung)
View(samsung)
View(items)
View(top_brand)
# counting mean and sd for samsung ratings
samsung_stats <- items %>%
filter(brand == "Samsung") %>%
summarise(
num_ratings = n(),
samsung_mean = mean(samsung_rating),
samsung_sd  = sd(samsung_rating)
)
# fitting a normal distribution to a data set
items %>% filter(brand == "Samsung") %>%
ggplot(aes(x = rating))+
geom_histogram(aes(y = after_stat(density)), col = "white", bins = 25)+
stat_function(
fun = dnorm,
args = list(mean = samsung_mean, sd = samsung_sd), col = "red"
)
samsung_stats
# Ratings within one sd
samsung %>%
filter(rating >= samsung_stats$mean - samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$mean + samsung_stats$samsung_sd) %>%
summarise(prop_withing_1sd = n()/nrow(samsung))
# Ratings within one sd
samsung %>%
filter(l >= samsung_stats$mean - samsung_stats$samsung_sd) %>%
filter(l <= samsung_stats$mean + samsung_stats$samsung_sd) %>%
summarise(prop_withing_1sd = n()/nrow(samsung))
# Ratings within one sd
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$mean - samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$mean + samsung_stats$samsung_sd) %>%
summarise(prop_withing_1sd = n()/nrow(samsung))
# Ratings within one sd
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + samsung_stats$samsung_sd) %>%
summarise(prop_withing_1sd = n()/nrow(samsung))
# counting mean and sd for samsung ratings
samsung_stats <- items %>%
filter(brand == "Samsung") %>%
summarise(
num_ratings = n(),
samsung_mean = mean(samsung_rating),
samsung_sd  = sd(samsung_rating)
)
# fitting a normal distribution to a data set
items %>% filter(brand == "Samsung") %>%
ggplot(aes(x = rating))+
geom_histogram(aes(y = after_stat(density)), col = "white", bins = 25)+
stat_function(
fun = dnorm,
args = list(mean = samsung_mean, sd = samsung_sd), col = "red"
)
# ratings within two standard deviations
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - 2 * samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + 2* samsung_stats$samsung_sd) %>%
summarise(prop_withing_1sd = n()/nrow(samsung))
# Ratings within one sd
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + samsung_stats$samsung_sd) %>%
summarise(prop_withing_1sd = n()/num_ratings)
# Ratings within one sd
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + samsung_stats$samsung_sd) %>%
summarise(prop_withing_1sd = n()/num_rating)
# Ratings within one sd
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + samsung_stats$samsung_sd) %>%
summarise(prop_withing_1sd = n()/nrow(samsung))
# ratings within two standard deviations
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - 2 * samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + 2* samsung_stats$samsung_sd) %>%
summarise(prop_withing_1sd = n()/nrow(samsung))
# ratings within 3 standard deviations
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - 2 * samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + 2* samsung_stats$samsung_sd) %>%
summarise(prop_withing_1sd = n()/nrow(samsung))
# Ratings within one sd
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + samsung_stats$samsung_sd) %>%
summarise(prop_withing_1sd = n()/nrow(samsung))
# ratings within two standard deviations
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - 2 * samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + 2* samsung_stats$samsung_sd) %>%
summarise(prop_withing_2sd = n()/nrow(samsung))
# ratings within 3 standard deviations
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - 2 * samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + 2* samsung_stats$samsung_sd) %>%
summarise(prop_withing_3sd = n()/nrow(samsung))
# Ratings within one sd
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + samsung_stats$samsung_sd) %>%
summarise(prop_withing_1sd = n()/nrow(samsung))
# ratings within two standard deviations
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - 2 * samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + 2* samsung_stats$samsung_sd) %>%
summarise(prop_withing_2sd = n()/nrow(samsung))
# ratings within 3 standard deviations
items %>% filter(brand == "Samsung") %>%
filter(rating >= samsung_stats$samsung_mean - 3 * samsung_stats$samsung_sd) %>%
filter(rating <= samsung_stats$samsung_mean + 3 * samsung_stats$samsung_sd) %>%
summarise(prop_withing_3sd = n()/nrow(samsung))
