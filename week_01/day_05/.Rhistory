ratings_count >= 10000 & ratings_count < 100000 ~ "low",
ratings_count >= 100000 & ratings_count < 200000 ~ "medium",
ratings_count >= 200000 ~ "high",
ratings_count <= 1000000 ~ "very high"
))
view(books)
books %>%
summarise(across(.fns = ~ sum(is.na(.x)))
)
# no n/a's in a data set
#  replace 'en-US', 'en-CA'& 'en-GB' with 'eng';update by reassigning books
books <- books %>%
mutate(language_code = recode(language_code, "en-CA" = "eng",
"en-US"= "eng", "en-GB" = "eng" )
)
books_poppularity <- books %>%
mutate(ratings_count = case_when(
ratings_count == 0 ~ "none",
ratings_count < 10000 ~ "very low",
ratings_count >= 10000 & ratings_count < 100000 ~ "low",
ratings_count >= 100000 & ratings_count < 200000 ~ "medium",
ratings_count >= 200000 ~ "high",
ratings_count <= 1000000 ~ "very high"
))
view(books)
books_poppularity <- books %>%
mutate(ratings_count_popularity = case_when(
ratings_count == 0 ~ "none",
ratings_count < 10000 ~ "very low",
ratings_count >= 10000 & ratings_count < 100000 ~ "low",
ratings_count >= 100000 & ratings_count < 200000 ~ "medium",
ratings_count >= 200000 ~ "high",
ratings_count <= 1000000 ~ "very high"
))
view(books)
books <- books %>% # books are now all the existing books ( having at least 1 page)
mutate(num_pages = na_if(num_pages, 0)) %>%
drop_na()
#check what codes there are for different languages
#   count(language_code)# noticed 4 different codes for English,
lang_count <- books %>%
select(language_code) %>%
count(language_code)
#  replace 'en-US', 'en-CA'& 'en-GB' with 'eng';update by reassigning books
books <- books %>%
mutate(language_code = recode(language_code, "en-CA" = "eng",
"en-US"= "eng", "en-GB" = "eng" )
)
books_poppularity <- books %>%
mutate(ratings_count_popularity = case_when(
ratings_count == 0 ~ "none",
ratings_count < 10000 ~ "very low",
ratings_count >= 10000 & ratings_count < 100000 ~ "low",
ratings_count >= 100000 & ratings_count < 200000 ~ "medium",
ratings_count >= 200000 ~ "high",
ratings_count <= 1000000 ~ "very high"
))
view(books)
books_poppularity <- books %>%
mutate(ratings_count_popularity = case_when(
ratings_count == 0 ~ "none",
ratings_count < 10000 ~ "very low",
ratings_count >= 10000 & ratings_count < 100000 ~ "low",
ratings_count >= 100000 & ratings_count < 200000 ~ "medium",
ratings_count >= 200000 ~ "high",
ratings_count <= 1000000 ~ "very high"
).after = ratings_count)
books_poppularity <- books %>%
mutate(ratings_count_popularity = case_when(
ratings_count == 0 ~ "none",
ratings_count < 10000 ~ "very low",
ratings_count >= 10000 & ratings_count < 100000 ~ "low",
ratings_count >= 100000 & ratings_count < 200000 ~ "medium",
ratings_count >= 200000 ~ "high",
ratings_count <= 1000000 ~ "very high"
),.after = ratings_count)
books <- read_csv("books.csv")
dim(books)
head(books)
tail(books)
view(books)
names(books)
glimpse(books)
skim(books)
```
books_poppularity <- books %>%
mutate(ratings_count_popularity = case_when(
ratings_count == 0 ~ "none",
ratings_count < 10000 ~ "very low",
ratings_count >= 10000 & ratings_count < 100000 ~ "low",
ratings_count >= 100000 & ratings_count < 200000 ~ "medium",
ratings_count >= 200000 ~ "high",
ratings_count <= 1000000 ~ "very high"
),.after = ratings_count)
view(books)
books <- books %>%
mutate(ratings_count_popularity = case_when(
ratings_count == 0 ~ "none",
ratings_count < 10000 ~ "very low",
ratings_count >= 10000 & ratings_count < 100000 ~ "low",
ratings_count >= 100000 & ratings_count < 200000 ~ "medium",
ratings_count >= 200000 ~ "high",
ratings_count <= 1000000 ~ "very high"
),.after = ratings_count)
view(books)
books %>%
select(authors, language_code) %>%
group_by(language_code)
books <- books %>%
mutate(publisher = recode(publisher,"Warner Books (NY)" = "Warner Books")) %>%
group_by(publisher)
books <- books %>%
mutate(publisher = recode(publisher,"Warner Books (NY)" = "Warner Books")) %>%
group_by(publisher)
books <- books %>%
mutate(publisher = recode(publisher,"Warner Books (NY)" = "Warner Books")) %>%
group_by(publisher)
library(tidyverse)
library(janitor)
library(CodeClanData)
library(skimr)
books <- read_csv("books.csv")
dim(books)
head(books)
tail(books)
view(books)
names(books)
glimpse(books)
skim(books)
books %>%   summarise(across(.fns = ~ sum(is.na(.x)))
)
# no n/a's in a data set
books <- books %>% # books are now all the books (having at least 1 page)
mutate(num_pages = na_if(num_pages, 0)) %>%
drop_na()
# check what codes there are for different languages
# count(language_code)# noticed 4 different codes for English,
lang_count <- books %>%
group_by(language_code) %>%
count(language_code)
lang_count
#  replace 'en-US', 'en-CA'& 'en-GB' with 'eng';update by reassigning books
books <- books %>%
mutate(language_code = recode(language_code, "en-CA" = "eng",
"en-US"= "eng", "en-GB" = "eng" )
)
#  replace 'en-US', 'en-CA'& 'en-GB' with 'eng';update by reassigning books
books <- books %>%
mutate(language_code = recode(language_code, "en-CA" = "eng",
"en-US"= "eng", "en-GB" = "eng" )
)
# added ratings_count_popularity into books
books <- books %>%
mutate(ratings_count_popularity = case_when(
ratings_count == 0 ~ "none",
ratings_count < 10000 ~ "very low",
ratings_count >= 10000 & ratings_count < 100000 ~ "low",
ratings_count >= 100000 & ratings_count < 200000 ~ "medium",
ratings_count >= 200000 ~ "high",
ratings_count <= 1000000 ~ "very high"
),.after = ratings_count)
view(books)
books_per_author <- books %>%
count(authors, sort = TRUE)
# 'sort = TRUE' allows the results to be grouped from the highest to the lowest
books_per_author
longest_book <- books %>%
select(num_pages, authors, title, ) %>%
arrange(desc(num_pages)) %>%
head(num_pages, n = 10)
longest_book
avg_book_length <- books %>%
select(authors, title, num_pages) %>%
group_by(authors) %>%
mutate(avg_pages = median(num_pages),.after = num_pages) %>%
arrange(desc(avg_pages))
avg_book_length
recommended_books <- books %>%
select(authors, title,average_rating, ratings_count,language_code) %>%
# narrow dow choices to books written in Englis only
mutate(language_code = if_else(language_code == "eng", TRUE, FALSE)) %>%
filter(language_code, TRUE) %>%
# choose only rating wahere more than 1 mln recommendations was available
mutate(lots_of_ratings = ratings_count >= 1000000) %>%
filter(lots_of_ratings, TRUE) %>%
# choose only books with rating over 4.0 _ on a scale from 0-5)
mutate(average_rating = if_else(average_rating >= 4.0, TRUE, FALSE)) %>%
filter(average_rating, TRUE) %>%
head(recommended_books, n = 10)
recommended_books
# mutate(good_rating = average_rating >= 4.5)
# mutate(recommended = if_else(average_rating >= 4.5, "YES", "NO") & (ratings_count_popularity == "high" or "very high"))
books <- books %>%
mutate(publisher = recode(publisher,"Warner Books (NY)" = "Warner Books")) %>%
group_by(publisher)
# books %>%
#   select(authors, title, publication_date, publisher) %>%
# mutate(warner_publishers = if_else(publisher == "Warner", TRUE, FALSE))
#   # filter(warner_publishers, TRUE)
view(books)
books <- books %>%
mutate(publisher = recode(publisher,"Warner Books (NY)" = "Warner Books")) %>%
arrange(desc(publisher))
# books %>%
#   select(authors, title, publication_date, publisher) %>%
# mutate(warner_publishers = if_else(publisher == "Warner", TRUE, FALSE))
#   # filter(warner_publishers, TRUE)
view(books)
books <- books %>%
mutate(publisher = recode(publisher,"Warner Books (NY)" = "Warner Books")) %>%
arrange(desc(publisher))
# books %>%
#   select(authors, title, publication_date, publisher) %>%
# mutate(warner_publishers = if_else(publisher == "Warner", TRUE, FALSE))
#   # filter(warner_publishers, TRUE)
view(books)
books <- books %>%
mutate(publisher = recode(publisher,"Warner Books (NY)" = "Warner Books")) %>%
arrange(desc(publisher)) %>%
filter(books, publisher == "Warner Books")
books <- books %>%
mutate(publisher = recode(publisher,"Warner Books (NY)" = "Warner Books")) %>%
arrange(desc(publisher)) %>%
filter(books, publisher == "Warner Books") %>%
arrange(.desc(publication_date))
books <- books %>%
mutate(publisher = recode(publisher,"Warner Books (NY)" = "Warner Books")) %>%
arrange(desc(publisher)) %>%
filter(books, publisher == "Warner Books")
library(tidyverse)
library(janitor)
library(CodeClanData)
library(skimr)
books <- read_csv("books.csv")
dim(books)
head(books)
tail(books)
view(books)
names(books)
glimpse(books)
skim(books)
books %>%   summarise(across(.fns = ~ sum(is.na(.x)))
)
# no n/a's in a data set
books <- books %>% # books are now all the books (having at least 1 page)
mutate(num_pages = na_if(num_pages, 0)) %>%
drop_na()
# check what codes there are for different languages
# count(language_code)# noticed 4 different codes for English,
lang_count <- books %>%
group_by(language_code) %>%
count(language_code)
lang_count
#  replace 'en-US', 'en-CA'& 'en-GB' with 'eng';update by reassigning books
books <- books %>%
mutate(language_code = recode(language_code, "en-CA" = "eng",
"en-US"= "eng", "en-GB" = "eng" )
)
# added ratings_count_popularity into books
books <- books %>%
mutate(ratings_count_popularity = case_when(
ratings_count == 0 ~ "none",
ratings_count < 10000 ~ "very low",
ratings_count >= 10000 & ratings_count < 100000 ~ "low",
ratings_count >= 100000 & ratings_count < 200000 ~ "medium",
ratings_count >= 200000 ~ "high",
ratings_count <= 1000000 ~ "very high"
),.after = ratings_count)
view(books)
books_per_author <- books %>%
count(authors, sort = TRUE)
# 'sort = TRUE' allows the results to be grouped from the highest to the lowest
books_per_author
longest_book <- books %>%
select(num_pages, authors, title, ) %>%
arrange(desc(num_pages)) %>%
head(num_pages, n = 10)
longest_book
avg_book_length <- books %>%
select(authors, title, num_pages) %>%
group_by(authors) %>%
mutate(avg_pages = median(num_pages),.after = num_pages) %>%
arrange(desc(avg_pages))
avg_book_length
recommended_books <- books %>%
select(authors, title,average_rating, ratings_count,language_code) %>%
# narrow dow choices to books written in Englis only
mutate(language_code = if_else(language_code == "eng", TRUE, FALSE)) %>%
filter(language_code, TRUE) %>%
# choose only rating wahere more than 1 mln recommendations was available
mutate(lots_of_ratings = ratings_count >= 1000000) %>%
filter(lots_of_ratings, TRUE) %>%
# choose only books with rating over 4.0 _ on a scale from 0-5)
mutate(average_rating = if_else(average_rating >= 4.0, TRUE, FALSE)) %>%
filter(average_rating, TRUE) %>%
head(recommended_books, n = 10)
recommended_books
# mutate(good_rating = average_rating >= 4.5)
# mutate(recommended = if_else(average_rating >= 4.5, "YES", "NO") & (ratings_count_popularity == "high" or "very high"))
books <- books %>%
mutate(publisher = recode(publisher,"Warner Books (NY)" = "Warner Books")) %>%
arrange(desc(publisher)) %>%
filter(books, publisher == "Warner Books")
?summarise
best_author <- books %>%
select(authors, title, num_pages, average_rating) %>%
group_by(authors, average_rating) %>%
mutate(avg_rating = median(average_rating),.after = num_pages) %>%
arrange(desc(avg_rating))
best author
best_author
books %>%
group_by(title)
books %>%
select(authors, title, language_code) %>%
summarise(authors,starts_with("J.K. Rowling")
books %>%
select(authors, title, language_code) %>%
summarise(authors,starts_with("J.K. Rowling"))
books %>%
select(authors, title, language_code) %>%
select(starts_with("J.K. Rowling"))
books %>%
select(authors, title, language_code) %>%
select(starts_with("J.K.Rowling"))
books %>%
select(authors, title, language_code) %>%
select(starts_with("J.K."))
books %>%
select(authors, title, language_code) %>%
select(starts_with(J.K.))
books %>%
filter(authors, "J.K. Rowling")
?filter
books %>%
select(authors, title, language_code) %>%
select(starts_with(J.K.))
filter(authors, J.K.Rowling == "J.K. Rowling")
uthors <- books %>%
select(authors)
authors <- books %>%
select(authors)
books %>%
filter(authors, J.K.Rowling == "J.K. Rowling")
?case_when
library(tidyverse)
library(janitor)
library(CodeClanData)
library(skimr)
books <- read_csv("books.csv")
dim(books)
head(books)
tail(books)
view(books)
names(books)
glimpse(books)
skim(books)
books %>%   summarise(across(.fns = ~ sum(is.na(.x)))
)
# no n/a's in a data set
books <- books %>% # books are now all the books (having at least 1 page)
mutate(num_pages = na_if(num_pages, 0)) %>%
drop_na()
# check what codes there are for different languages
# count(language_code)# noticed 4 different codes for English,
lang_count <- books %>%
group_by(language_code) %>%
count(language_code)
lang_count
#  replace 'en-US', 'en-CA'& 'en-GB' with 'eng';update by reassigning books
books <- books %>%
mutate(language_code = recode(language_code, "en-CA" = "eng",
"en-US"= "eng", "en-GB" = "eng" )
)
# added ratings_count_popularity into books
books <- books %>%
mutate(ratings_count_popularity = case_when(
ratings_count == 0 ~ "none",
ratings_count < 10000 ~ "very low",
ratings_count >= 10000 & ratings_count < 100000 ~ "low",
ratings_count >= 100000 & ratings_count < 200000 ~ "medium",
ratings_count >= 200000 ~ "high",
ratings_count <= 1000000 ~ "very high"
),.after = ratings_count)
view(books)
books_per_author <- books %>%
count(authors, sort = TRUE)
# 'sort = TRUE' allows the results to be grouped from the highest to the lowest
books_per_author
longest_book <- books %>%
select(num_pages, authors, title, ) %>%
arrange(desc(num_pages)) %>%
head(num_pages, n = 10)
longest_book
avg_book_length <- books %>%
select(authors, title, num_pages) %>%
group_by(authors) %>%
mutate(avg_pages = median(num_pages),.after = num_pages) %>%
arrange(desc(avg_pages))
avg_book_length
```{r}
books %>%
select(authors, title, language_code) %>%
mutate(authors = if_else(authors(starts_with("J.K. Rowling"), "J.K. Rowling", authors)))
books %>%
select(authors, title, language_code) %>%
mutate(books, authors = if_else(authors(starts_with("J.K. Rowling"), "J.K. Rowling", authors)))
books %>%
select(authors, title, language_code) %>%
mutate(if_else(authors(starts_with("J.K. Rowling"), "J.K. Rowling", authors)))
books %>%
select(authors , title, language_code) %>%
mutate(authors = if_else(authors(starts_with("J.K. Rowling"), "J.K. Rowling", authors))
books %>%
select(authors , title, language_code) %>%
mutate(authors = if_else(authors(starts_with("J.K. Rowling"), "J.K. Rowling", authors)))
books %>%
select(authors , title, language_code) %>%
mutate(authors = if_else(starts_with("J.K. Rowling"), "J.K. Rowling", authors)))
books %>%
select(authors , title, language_code) %>%
mutate(authors = if_else(starts_with("J.K. Rowling"), "J.K. Rowling", authors))
books %>%
select(authors , title, language_code) %>%
select(authors = if_else(starts_with("J.K. Rowling"), "J.K. Rowling", authors))
books %>%
select(authors , title, language_code) %>%
select(authors, if_else(starts_with("J.K. Rowling"), "J.K. Rowling", authors))
?rename
books %>%
select(authors , title, language_code) %>%
rename_with(authors,"J.K. Rowling", starts_with("J.K. Rowling")))
books %>%
select(authors , title, language_code) %>%
rename_with(authors,"J.K. Rowling", starts_with("J.K. Rowling"))
books %>%
rename_with(authors,"J.K. Rowling", starts_with("J.K. Rowling"))
books %>%
select(authors , title, language_code) %>%
case_when(authors,"J.K. Rowling",starts_with("J.K. Rowling")))
books %>%
select(authors , title, language_code) %>%
case_when(authors,"J.K. Rowling",starts_with("J.K. Rowling"))
books %>%
select(authors , title, language_code) %>%
select(case_when(authors,"J.K. Rowling",starts_with("J.K. Rowling")))
books %>%
select(authors, case_when(authors,"J.K. Rowling",starts_with("J.K. Rowling")))
books %>%
select(authors, case_when(authors,starts_with("J.K. Rowling")))
?summary()
books %>%
group_by(language_code) %>%
summarise(language_code)
books %>%
summarise(language_code)
?summarise
books %>%
group_by(language_code, title) %>%
summarise(language_code)
books %>%
group_by(language_code) %>%
count(language_code)
books %>%
select(authors, title, language_code)
books %>%
select(authors, title, language_code) %>%
filter(starts_with("J.K.Rowling"))
books %>%
select(starts_with("J.K.Rowling"))
books %>%
select(starts_with("J.K."))
books %>%
select(starts_with("J. K."))
books %>%
select(authors) %>%
select(starts_with("J.K."))
?starts_with
books %>%
select(authors) %>%
select(contains("Rowling"))
books %>%
select(contains("Rowling"))
books %>%
select(contains(Rowling))
books %>%
select(contains('Rowling'))
books %>%
group_by(publisher) %>%
count(publisher)
books %>%
group_by(publisher) %>%
count(publisher) %>%
arrange(desc(publisher))
books %>%
group_by(publisher) %>%
count(publisher) %>%
arrange(publisher)
books %>%
group_by(publisher) %>%
count(publisher) %>%
arrange(n)
books %>%
group_by(publisher) %>%
count(publisher) %>%
arrange(desc(n))
books %>%
mutate( Rowling_books = if_else(contains("Rowling"), TRUE, FALSE))
books %>%
select( Rowling_books = if_else(contains("Rowling"), TRUE, FALSE))
books %>%
select(if_else(contains("Rowling"), TRUE, FALSE))
