library(tidyverse)
library(modelr)
# visualisation packages
library(GGally)
library(ggfortify)
kc_house <- read_csv("data/kc_house_data.csv")
kc_house
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode))
kc_house_tidy %>%
distinct(waterfront)
# remove columns suggested as not useful
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
as_factor(watrerfront)
# remove columns suggested as not useful
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
as_factor(waterfront)
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
as.factor(waterfront)
View(kc_house_tidy)
# remove columns suggested as not useful
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
mutate(waterfront = as_factor(waterfront))
kc_house_tidy %>%
distinct(waterfront)
# remove columns suggested as not useful
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
mutate(waterfront = as_factor(waterfront),
renovated = as.logical(yr_renovated))
kc_house_tidy
View(kc_house_tidy)
library(tidyverse)
library(modelr)
# visualisation packages
library(GGally)
library(ggfortify)
kc_house <- read_csv("data/kc_house_data.csv")
# remove columns suggested as not useful
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
mutate(waterfront = as_factor(waterfront),
renovated = as.factor(yr_renovated))
kc_house_tidy %>%
distinct(waterfront)
View(kc_house_tidy)
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
mutate(waterfront = as_factor(waterfront),
renovated = as.logical(yr_renovated),
renovated = as_factor(renovated))
View(kc_house_tidy)
library(tidyverse)
library(modelr)
# visualisation packages
library(GGally)
library(ggfortify)
kc_house <- read_csv("data/kc_house_data.csv")
# remove columns suggested as not useful
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
mutate(waterfront = as_factor(waterfront),
renovated = as.logical(yr_renovated),
renovated = as.numeric(renovated))
kc_house_tidy %>%
distinct(waterfront)
kc_house_tidy %>%
distinct(renovated)
library(tidyverse)
library(modelr)
# visualisation packages
library(GGally)
library(ggfortify)
kc_house <- read_csv("data/kc_house_data.csv")
# remove columns suggested as not useful
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
mutate(
renovated = as.logical(yr_renovated),
renovated = as.numeric(renovated))
kc_house_tidy %>%
distinct(renovated)
kc_house_tidy %>%
distinct(view)
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
mutate(renovated = as.numeric(as.logical(yr_renovated)),
view = as_factor(view))
View(kc_house_tidy)
kc_house_tidy %>%
distinct(condition)
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
mutate(renovated = as.factor(as.logical(yr_renovated)),
view = as_factor(view),
condition = as_factor(condition))
kc_house_tidy %>%
distinct(grade)
# remove columns suggested as not useful
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
mutate(renovated = as.factor(as.logical(yr_renovated)),
view = as_factor(view),
condition = as_factor(condition),
grade = as_factor(grade))
View(kc_house_tidy)
alias(price ~ ., kc_house_tidy)
kc_house_tidy %>% select(sqft_living, sqft_above, sqft_basement)
alias(price ~ ., kc_house_tidy)
# kc_house_tidy %>% select(sqft_living, sqft_above, sqft_basement)
alias(price ~ ., kc_house_tidy)
kc_house_tidy <- kc_house_tidy
%>% select(-sqft_living)
kc_house_tidy <- kc_house_tidy %>%
select(-sqft_living)
alias(price ~ ., kc_house_tidy)
kc_house_tidy <- kc_house_tidy %>%
select(-sqft_living)
alias(price ~ ., kc_house_tidy)
kc_house_tidy <- kc_house_tidy %>%
select(-sqft_living)
alias(price ~ ., kc_house_tidy)
houses_tidy_numeric <- kc_house_tidy %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- kc_house_tidy %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- houses_tidy$pric
houses_tidy_numeric <- kc_house_tidy %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- kc_house_tidy %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- houses_tidy$price
houses_tidy_nonnumeric
houses_tidy_numeric <- kc_house_tidy %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- kc_house_tidy %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- kc_house_tidy$price
ggpairs(houses_tidy_numeric)
ggpairs(houses_tidy_nonnumeric)
houses_tidy_numeric <- kc_house_tidy %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- kc_house_tidy %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- kc_house_tidy$price
ggpairs(houses_tidy_numeric)
ggpairs(houses_tidy_nonnumeric)
houses_tidy_nonnumeric$price
houses_tidy_nonnumeric$price
houses_tidy_nonnumeric
ggpairs(houses_tidy_nonnumeric
houses_tidy_nonnumeric
View(houses_tidy_nonnumeric)
View(houses_tidy_numeric)
View(houses_tidy_nonnumeric)
library(tidyverse)
library(modelr)
# visualisation packages
library(GGally)
library(ggfortify)
kc_house <- read_csv("data/kc_house_data.csv")
# remove columns suggested as not useful
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode)) %>%
mutate(renovated = as.logical(yr_renovated),
renovated = as.numeric(renovated),
view = as_factor(view),
condition = as_factor(condition),
grade = as_factor(grade))
kc_house_tidy %>%
distinct(grade)
alias(price ~ ., kc_house_tidy)
# sqft_living = sqft_above + sqft_basement) - these are aliased variables, so will remove sqft_living
kc_house_tidy <- kc_house_tidy %>%
select(-sqft_living)
alias(price ~ ., kc_house_tidy)
kc_house_tidy <- kc_house_tidy %>%
select(-sqft_living)
alias(price ~ ., kc_house_tidy)
houses_tidy_numeric <- kc_house_tidy %>%
select_if(is.numeric)
houses_tidy_numeric
houses_tidy_numeric <- kc_house_tidy %>%
select(-yr_renovated) %>%
select_if(is.numeric)
houses_tidy_numeric
library(tidyverse)
library(modelr)
# visualisation packages
library(GGally)
library(ggfortify)
kc_house <- read_csv("data/kc_house_data.csv")
# remove columns suggested as not useful
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode, longitude, latitude)) %>%
mutate(renovated = as.logical(yr_renovated),
renovated = as.numeric(renovated),
view = as_factor(view),
condition = as_factor(condition),
grade = as_factor(grade))
library(tidyverse)
library(modelr)
# visualisation packages
library(GGally)
library(ggfortify)
kc_house <- read_csv("data/kc_house_data.csv")
# remove columns suggested as not useful
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode, long, lat)) %>%
mutate(renovated = as.logical(yr_renovated),
renovated = as.numeric(renovated),
view = as_factor(view),
condition = as_factor(condition),
grade = as_factor(grade))
kc_house_tidy %>%
distinct(grade)
alias(price ~ ., kc_house_tidy)
# sqft_living = sqft_above + sqft_basement) - these are aliased variables, so will remove sqft_living
kc_house_tidy <- kc_house_tidy %>%
select(-sqft_living)
alias(price ~ ., kc_house_tidy)
houses_tidy_numeric <- kc_house_tidy %>%
select(-yr_renovated) %>%
select_if(is.numeric)
houses_tidy_nonnumeric
ggpairs(houses_tidy_numeric)
ggpairs(houses_tidy_nonnumeric)
# sqft_living = sqft_above + sqft_basement) - these are aliased variables, so will remove sqft_living
kc_house_tidy <- kc_house_tidy %>%
select(-sqft_basement)
alias(price ~ ., kc_house_tidy)
# sqft_living = sqft_above + sqft_basement) - these are aliased variables, so will remove sqft_basement
kc_house_tidy <- kc_house_tidy %>%
select(-sqft_basement)
kc_house_tidy
library(tidyverse)
library(modelr)
# visualisation packages
library(GGally)
library(ggfortify)
kc_house <- read_csv("data/kc_house_data.csv")
# remove columns suggested as not useful
kc_house_tidy <- kc_house %>%
select(-c(id, date, sqft_living15, sqft_lot15, zipcode, long, lat)) %>%
mutate(renovated = as.logical(yr_renovated),
renovated = as.numeric(renovated),
view = as_factor(view),
condition = as_factor(condition),
grade = as_factor(grade))
kc_house_tidy %>%
distinct(grade)
alias(price ~ ., kc_house_tidy)
# sqft_living = sqft_above + sqft_basement) - these are aliased variables, so will remove sqft_basement
kc_house_tidy <- kc_house_tidy %>%
select(-sqft_basement)
alias(price ~ ., kc_house_tidy)
alias(price ~ ., kc_house_tidy)
# sqft_living = sqft_above + sqft_basement) - these are aliased variables, so will remove sqft_basement
kc_house_tidy <- kc_house_tidy %>%
select(-sqft_basement)
alias(price ~ ., kc_house_tidy)
houses_tidy_numeric <- kc_house_tidy %>%
select(-yr_renovated) %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- kc_house_tidy %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- kc_house_tidy$price
ggpairs(houses_tidy_numeric)
ggpairs(houses_tidy_nonnumeric)
mod1 <- lm(price ~ sqft_liviing, kc_house_tidy)
mod1 <- lm(price ~ sqft_living, kc_house_tidy)
mod1 <- lm(price ~ sqft_living, kc_house_tidy)
summary(mod1)
autoplot(mod1)
mod1 <- lm(price ~ view, kc_house_tidy)
summary(mod1)
autoplot(mod1)
mod1 <- lm(price ~ sqft_living, kc_house_tidy)
summary(mod1)
autoplot(mod1)
mod2 <- lm(price~ bathrooms, kc_house_tidy)
autoplot(mod2)
summary(mod2)
mod3 <- lm(price~ view, kc_house_tidy)
summary(mod3)
autoplot(mod3)
mod4 <- lm(price~ grade, kc_house_tidy)
summary(mod4)
autoplot(mod4)
mod5 <- lm(price ~ sqft_living + bathroom, kc_house_tidy)
mod5 <- lm(price ~ sqft_living + bathrooms, kc_house_tidy)
summary(mod5)
autoplot(mod5)
mod5 <- lm(price ~ sqft_living + bathroom, kc_house_tidy)
anova(mod5, mod1)
mod5 <- lm(price ~ sqft_living + view, kc_house_tidy)
summary(mod5)
autoplot(mod5)
anova(mod5, mod1)
anova(mod5, mod1)
mod6 <- lm(price ~ sqft_living + grade, kc_house_tidy)
anova(mod6, mod1)
houses_remaining_resid <- kc_house_tidy %>%
add_residuals(mod1) %>%
select(-c("sqft_living", "price"))
houses_remaining_resid
# create a new data set called houses_remaining_resid
houses_remaining_resid <- houses_tidy_numeric %>%
add_residuals(mod1) %>%
select(-c("sqft_living", "price"))
houses_remaining_resid <- houses_tidy_numeric %>%
add_residuals(mod1) %>%
select(-c("sqft_living", "price"))
houses_remaining_resid
# create a new data set called houses_remaining_resid
houses_remaining_resid <- kc_house_tidy %>%
add_residuals(mod1) %>%
select(-c("sqft_living", "price"))
mod5 <- lm(price ~ sqft_living + bath, houses_tidy_numeric)
houses_remaining_resid %>%
ggpairs()
# create a new data set called houses_remaining_resid
houses_remaining_resid <- houses_tidy_numeric %>%
add_residuals(mod1) %>%
select(-c("sqft_living", "price"))
houses_remaining_resid %>%
ggpairs()
houses_remaining_resid_num <- houses_tidy_numeric %>%
add_residuals(mod1) %>%
select(-c("sqft_living", "price"))
houses_remaining_resid_nonnum <- houses_tidy_nonnumeric %>%
add_residuals(mod1) %>%
select(-c("price"))
houses_remaining_resid_nonnum <-kc_house_tidy %>%
add_residuals(mod1) %>%
select(-c("price"))
houses_remaining_resid_nonnum <- kc_house_tidy %>%
add_residuals(mod1) %>%
select(-c("sqft_living", "price"))
houses_remaining_resid <- kc_house_tidy %>%
add_residuals(mod1) %>%
select(-c("sqft_living", "price"))
houses_remaining_resid %>%
ggpairs()
mod6 <- lm(price ~ sqft_living + grade, kc_house_tidy)
summary(mod6)
autoplot(mod6)
anova(mod6, mod1)
houses_remaining_resid <- kc_house_tidy %>%
add_residuals(mod6) %>%
select(-c("sqft_living", "price", "grade"))
houses_remaining_resid %>%
ggpairs()
mod6a <- lm(price ~ sqft_living + grade, kc_house_tidy)
summary(mod6a)
autoplot(mod6a)
mod6b <- lm(price ~ sqft_living + bathrooms, kc_house_tidy)
summary(mod6b)
autoplot((mod6b))
# anova(mod6, mod1)
houses_remaining_resid <- kc_house_tidy %>%
add_residuals(mod6a) %>%
select(-c("sqft_living", "price", "grade"))
houses_remaining_resid %>%
ggpairs()
mod7a <- lm(price ~ sqft_living + grade + view, kc_house_tidy)
summary(mod7a)
autoplot(mod7a)
mod7b <- mod7a <- lm(price ~ sqft_living + grade + bathrooms, kc_house_tidy)
summary(mod7b)
autoplot(mod7b)
mod7a <- lm(price ~ sqft_living + grade + view, kc_house_tidy)
summary(mod7a)
mod6a <- lm(price ~ sqft_living + view, kc_house_tidy)
summary(mod6a)
autoplot(mod6a)
mod6b <- lm(price ~ sqft_living + bathrooms, kc_house_tidy)
summary(mod6b)
autoplot((mod6b))
# anova(mod6, mod1)
mod7a <- lm(price ~ sqft_living +view +grade, kc_house_tidy)
summary(mod7a)
autoplot(mod7a)
mod7b <- mod7a <- lm(price ~ sqft_living + view + bathrooms, kc_house_tidy)
summary(mod7b)
autoplot(mod7b)
anova(mod6a, mod7a)
anova(mod1, mod6a)
mod6b <- lm(price ~ sqft_living + bathrooms, kc_house_tidy)
summary(mod6b)
autoplot((mod6b))
anova(mod6b, mod1)
mod7b <- mod7a <- lm(price ~ sqft_living + view + bathrooms, kc_house_tidy)
summary(mod7b)
autoplot(mod7b)
anova(mod6a, mod7b)
houses_logged <- kc_house_tidy %>%
mutate(ln_house_price = log(price))
houses_logged
houses_logged <- kc_house_tidy %>%
mutate(ln_house_price = log(price), .after = price)
houses_logged
summary(lm((price~grade, kc_house_tidy)))
summary(lm((price ~ grade, kc_house_tidy)))
summary(lm(price ~ grade, kc_house_tidy))
summary(lm(price~as.factor(grade), kc_house_tidy))
summary(lm(price ~ grade, kc_house_tidy))
summary(lm(price~as.factor(grade), kc_house_tidy))
houses_tidy_numeric <- kc_house_tidy %>%
select(-yr_renovated) %>%
select_if(is.numeric)
houses_tidy_nonnumeric <- kc_house_tidy %>%
select_if(function(x) !is.numeric(x))
houses_tidy_nonnumeric$price <- kc_house_tidy$price
ggpairs(houses_tidy_numeric, progress = FALSE)
ggpairs(houses_tidy_nonnumeric, progress = FALSE)
ggsave("ggpairs_numeric", width = 15, height = 15)
ggpairs(houses_tidy_nonnumeric, progress = FALSE)
ggsave("ggpairs_nonnumeric")
ggsave("ggpairs_numeric.png", width = 15, height = 15)
ggpairs(houses_tidy_numeric, progress = FALSE)
# saves teh plot for future reference, can also provide dimensions to make it bigger
ggsave("ggpairs_numeric.png", width = 15, height = 15)
ggpairs(houses_tidy_nonnumeric, progress = FALSE)
ggsave("ggpairs_nonnumeric.png", width = 15, height = 15)
```
mod1 <- lm(price ~ sqft_living, kc_house_tidy)
summary(mod1)
autoplot(mod1)
# example
mod2 <- lm(price~sqft_living + grade, kc_house_tidy)
mod1 <- lm(price ~ sqft_living, kc_house_tidy)
summary(mod1)
autoplot(mod1)
# example
mod2 <- lm(price~sqft_living + grade, kc_house_tidy)
anova(mod1, mod2)
anova(mod1, mod2)
houses_tidy <- kc_house_tidy %>%
mutate(grade_grouped = as.factor(if_else(as.numeric(grade) < 8, 7, grade)))
mod1 <- lm(price ~ sqft_living, kc_house_tidy)
summary(mod1)
autoplot(mod1)
# example fo checking with anova
mod2 <- lm(price~sqft_living + grade, kc_house_tidy)
anova(mod1, mod2)
# example with grouping
houses_tidy <- kc_house_tidy %>%
mutate(grade_grouped = as.factor(if_else(as.numeric(grade) < 8), as.numeric(7), grade))
mod1 <- lm(price ~ sqft_living, kc_house_tidy)
summary(mod1)
autoplot(mod1)
# example fo checking with anova
mod2 <- lm(price~sqft_living + grade, kc_house_tidy)
anova(mod1, mod2)
# example with grouping
houses_tidy <- kc_house_tidy %>%
mutate(grade_grouped = as.factor(if_else(as.numeric(grade) < 8), as.numeric(7), grade))
houses_tidy <- kc_house_tidy %>%
mutate(grade_grouped = as.factor(if_else(as.numeric(grade) < 8, as.numeric(7), grade))
houses_tidy <- kc_house_tidy %>%
mod1 <- lm(price ~ sqft_living, kc_house_tidy)
summary(mod1)
autoplot(mod1)
# example fo checking with anova
mod2 <- lm(price~sqft_living + grade, kc_house_tidy)
anova(mod1, mod2)
# example with grouping
houses_tidy <- kc_house_tidy %>%
mutate(grade_grouped = as.factor(if_else(as.numeric(grade) < 8, 7,as.numeric(grade) )))
plot(mod2)
houses_remaining_resid <- kc_house_tidy %>%
add_residuals(mod6a) %>%
select(-c("sqft_living", "price", "grade"))
houses_remaining_resid %>%
ggpairs(transform = FALSE)
plot(mod2)
view(mod2)
view(mod2)
houses_remaining_resid
