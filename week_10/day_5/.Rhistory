red <- read_csv("data/wine_quality_red.csv")
white <- read_csv("data/wine_quality_white.csv")
# explore data
skimr::skim(red)
head(red)
skimr::skim(white)
head(white)
# add column with wine type to both data sets before binding and removing a wine id
red <- red %>%
mutate(wine_type = "red")
white <- white %>%
mutate(wine_type = "white")
# bind both sets together to create wines
wines <- bind_rows(red, white)
unique(wines&quality)
unique(wines&quality)
unique(wines$quality)
unique(wines$alcohol)
unique(wines$ph)
unique(wines$p_h)
unique(wines$p_h)
wines %>% arrange(p_h)
wines %>% arrange(desc(p_h))
skim(wines)
wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region))
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region))
wines %>%
ggplot(aes(x = fixed_acidity))+
geom_point()
wines %>%
ggplot(aes(x = fixed_acidity))+
geom_bar()
wines %>%
ggpair()
wines %>%
ggpairs()
wines %>%
ggpairs(progress = FALSE)
wines %>% select(-wine_id) %>%
ggpairs(progress = FALSE)
wines %>%
ggplot(aes(x = region))+
geom_boxplot()
wines %>%
ggplot(aes(x = region, y = quality))+
geom_boxplot()
wines %>%
ggplot(aes(x= wine_type, y = quality))+
geom_boxplot()
wines<- select(-c(region,wine_type ))
wines<- select(-c(region, wine_type))
wines <- wiens %>%
select(-c(region , wine_type))
wines <- wines %>%
select(-c(region , wine_type))
wines
wines <- wines %>% select(-wine_id) %>% # remove wine id as not helpful in finding correalations between variables
ggpairs(progress = FALSE)
wines <- wines %>%
select(-c(region , wine_type))
wines <- wines %>%
select(-c(region, wine_type))
library(tidyverse)
library(GGally)
library(caret)
library(skimr)
# read in data
red <- read_csv("data/wine_quality_red.csv")
white <- read_csv("data/wine_quality_white.csv")
# explore data
skim(red)
head(red)
skim(white)
head(white)
# add column with wine type to both data sets before binding and removing a wine id
red <- red %>%
mutate(wine_type = "red")
white <- white %>%
mutate(wine_type = "white")
# bind both sets together to create wines
wines <- bind_rows(red, white)
wines %>% arrange(desc(p_h))
# ph is between between 2.82 and 4.01
skim(wines)
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region))
wines <- wines %>% select(-wine_id) %>% # remove wine id as not helpful in finding correalations between variables
ggpairs(progress = FALSE)
wines %>%
ggplot(aes(x = region, y = quality))+
geom_boxplot()
wines <- wines %>% select(-wine_id) %>% # remove wine id as not helpful in finding correalations between variables
ggpairs(progress = FALSE)
library(tidyverse)
library(GGally)
library(caret)
library(skimr)
# read in data
red <- read_csv("data/wine_quality_red.csv")
white <- read_csv("data/wine_quality_white.csv")
# explore data
skim(red)
head(red)
skim(white)
head(white)
# add column with wine type to both data sets before binding and removing a wine id
red <- red %>%
mutate(wine_type = "red")
white <- white %>%
mutate(wine_type = "white")
# bind both sets together to create wines
wines <- bind_rows(red, white)
wines %>% arrange(desc(p_h))
# ph is between between 2.82 and 4.01
skim(wines)
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region))
wines <- wines %>% select(-wine_id) %>% # remove wine id as not helpful in finding correalations between variables
ggpairs(progress = FALSE)
wines <- wines %>% select(-wine_id) %>% # remove wine id as not helpful in finding correalations between variables
ggpairs(progress = FALSE)
wines %>% # remove wine id as not helpful in finding correalations between variables
ggpairs(progress = FALSE)
library(tidyverse)
library(GGally)
library(caret)
library(skimr)
# read in data
red <- read_csv("data/wine_quality_red.csv")
white <- read_csv("data/wine_quality_white.csv")
# explore data
skim(red)
head(red)
skim(white)
head(white)
# add column with wine type to both data sets before binding and removing a wine id
red <- red %>%
mutate(wine_type = "red")
white <- white %>%
mutate(wine_type = "white")
# bind both sets together to create wines
wines <- bind_rows(red, white)
wines %>% arrange(desc(p_h))
# ph is between between 2.82 and 4.01
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region))
wines %>%
ggpairs(progress = FALSE)
wines <- wines %>%
select(-c(wien_id, region, wine_type))
View(wines)
wines <- wines %>%
select(-c(wine_id, region, wine_type))
wines
wines %>%
ggpairs(progress = FALSE)
alias(qualiaty ~ ., wines)
alias(quality ~ ., wines)
wines %>%
ggcorr()
wines %>%
ggcorr(label = TRUE)
wines %>%
ggcorr(label = TRUE)
ggasave("correlation_wines.pgn")
wines %>%
ggcorr(label = TRUE)
ggasave("correlation_wines")
ggsave("correlation_wines")
wines %>%
ggcorr(label = TRUE)
ggsave("correlation_wines.pgn")
wines %>%
ggcorr(label = TRUE)
ggsave("correlation_wines.png")
wines %>%
ggplot(aes(x= density, y = quality))
wines %>%
ggplot(aes(x= density, y = quality))+
geom_point()
wines %>%
ggplot(aes(x= acohol, y = quality))+
geom_point()
wines %>%
ggplot(aes(x= alcohol, y = quality))+
geom_point()
wines %>%
ggplot(aes(x= chlorides, y = quality))+
geom_point()
wines %>%
ggplot(aes(x = chlorides))+
geom_bar
wines %>%
ggplot(aes(x = chlorides))+
geom_bar()
wines %>%
ggplot(aes(x = chlorides))+
geom_bar()
wines %>%
ggplot(aes(x = alcohol))+
geom_bar()
wines %>%
ggplot(aes(x = alcohol))+
geom_bar()
wines %>%
ggplot(aes(x= chlorides, y = quality))+
geom_point()
wines %>%
ggplot( alcohol))+
wines %>%
ggplot( alcohol)+
geom_bar()
wines %>%
ggplot(aes(x= alcohol))+
geom_bar()
wines %>%
ggplot(aes(x= alcohol, y = quality))+
geom_point()
wines %>%
ggplot(aes(x = alcohol))+
geom_line()
wines %>%
ggplot(aes(x = alcohol))+
geom_bar()
wines %>%
ggplot(aes(x =density))+
geom_bar()
wines %>%
ggplot(aes(x = region, y = quality))+
geom_boxplot()
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region))
library(tidyverse)
library(GGally)
library(caret)
library(skimr)
# read in data
red <- read_csv("data/wine_quality_red.csv")
white <- read_csv("data/wine_quality_white.csv")
# explore data
skim(red)
head(red)
skim(white)
head(white)
# add column with wine type to both data sets before binding and removing a wine id
red <- red %>%
mutate(wine_type = "red")
white <- white %>%
mutate(wine_type = "white")
# bind both sets together to create wines
wines <- bind_rows(red, white)
wines %>% arrange(desc(p_h))
# ph is between between 2.82 and 4.01
skim(wines)
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region))
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region))
wines %>%
ggplot(aes(x = region, y = quality))+
geom_boxplot()
wines <- wines %>%
select(-c(wine_id, region, wine_type))
wines %>%
ggplot(aes(x = density))+
geom_bar()
wines %>%
ggplot(aes(x = alcohol))+
geom_bar()
head(wines)
wines %>%  arrange(alcohol)
wines %>%  arrange(desc(alcohol))
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region)) %>%
# round numerical variables to the the first decimal place, except density which is rounded to two decimal places as one would change the results too much.
mutate(chlorides = round(chlorides, decimal = 2),
density = round(density, decimal = 2),
alcohol = round(alcohol, decimal = 2),
)
library(tidyverse)
library(GGally)
library(caret)
library(skimr)
# read in data
red <- read_csv("data/wine_quality_red.csv")
white <- read_csv("data/wine_quality_white.csv")
# explore data
skim(red)
head(red)
skim(white)
head(white)
# add column with wine type to both data sets before binding and removing a wine id
red <- red %>%
mutate(wine_type = "red")
white <- white %>%
mutate(wine_type = "white")
# bind both sets together to create wines
wines <- bind_rows(red, white)
wines %>% arrange(desc(p_h))
# ph is between between 2.82 and 4.01
skim(wines)
head(wines)
wines %>%  arrange(desc(alcohol))
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region)) %>%
# round numerical variables to the the first decimal place, except density which is rounded to two decimal places as one would change the results too much.
mutate(chlorides = round(chlorides, decimal = 2),
density = round(density, decimal = 2),
alcohol = round(alcohol, decimal = 2),
)
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region)) %>%
# round numerical variables to the the first decimal place, except density which is rounded to two decimal places as one would change the results too much.
mutate(chlorides = round(chlorides, digits =  = 2),
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region)) %>%
# round numerical variables to the the first decimal place, except density which is rounded to two decimal places as one would change the results too much.
mutate(chlorides = round(chlorides, digits =  = 2),
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region)) %>%
# round numerical variables to the the first decimal place, except density which is rounded to two decimal places as one would change the results too much.
mutate(chlorides = round(chlorides, digits = 2),
density = round(density, digits = 2),
alcohol = round(alcohol, digits = 2)
)
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region)) %>%
# round numerical variables to two decimal places as one would change the results too much.
mutate(chlorides = round(chlorides, digits = 2),
density = round(density, digits = 2),
alcohol = round(alcohol, digits = 2)
)
wines %>%
ggpairs(progress = FALSE)
wines <- wines %>%
select(-c(wine_id, region, wine_type))
alias(quality ~ ., wines)
# no aliases in the data set, so we can progress with teh current data set
wines %>%
ggcorr(label = TRUE)
ggsave("correlation_wines.png")
wines %>%
ggplot(aes(x = alcohol))+
geom_bar()
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region))
library(tidyverse)
library(GGally)
library(caret)
library(skimr)
# read in data
red <- read_csv("data/wine_quality_red.csv")
white <- read_csv("data/wine_quality_white.csv")
# explore data
skim(red)
head(red)
skim(white)
head(white)
# add column with wine type to both data sets before binding and removing a wine id
red <- red %>%
mutate(wine_type = "red")
white <- white %>%
mutate(wine_type = "white")
# bind both sets together to create wines
wines <- bind_rows(red, white)
wines %>% arrange(desc(p_h))
# ph is between between 2.82 and 4.01
skim(wines)
head(wines)
wines %>%  arrange(desc(alcohol))
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region))
)
# convert categorical vatriables into factor
wines <- wines %>% mutate(wine_type = as_factor(wine_type),
region = as_factor(region))
wines %>%
ggpairs(progress = FALSE)
wines %>%
ggcorr(label = TRUE)
ggsave("correlation_wines.png")
lm(quality ~ alcohol, wines)
summary(mod1)
mod1 <- lm(quality ~ alcohol, wines)
summary(mod1)
mod1 <- lm(quality ~ ln(alcohol), wines)
mod1 <- lm(quality ~ log(alcohol), wines)
summary(mod1)
mod1 <- lm(quality ~ alcohol, wines)
summary(mod1)
mod1 <- lm(quality ~ log(alcohol), wines)
summary(mod1)
mod1 <- lm(quality ~ alcohol, wines)
summary(mod1)
plot(mod1)
mod2a <- lm(quality ~ alcohol + density, data = wines)
mod2b <- lm(quality ~ alcohol + volatile_acidity, data = wines )
mod2a <- lm(quality ~ alcohol + density, data = wines)
mod2b <- lm(quality ~ alcohol + volatile_acidity, data = wines )
summary(mod2a)
summary(mod2b)
mod2a <- lm(quality ~ alcohol + density, data = wines)
mod2b <- lm(quality ~ alcohol + volatile_acidity, data = wines )
summary(mod2a)
summary(mod2b)
mod2a <- lm(quality ~ alcohol + density, data = wines)
summary(mod2a)
mod2b <- lm(quality ~ alcohol + volatile_acidity, data = wines)
summary(mod2b)
summary(mod1)
# adding volatile_acidity to the model as a second predictor
mod2b <- lm(quality ~ alcohol + volatile_acidity, data = wines)
summary(mod2b)
plot(mod2b)
mod3a <- lm(quality ~ alcohol + volatile_acidity + chloride, data = wines)
mod3a <- lm(quality ~ alcohol + volatile_acidity + chlorides, data = wines)
summary(mod3a)
mod3b(lm(quality ~ alcohol + volatile_acidity + density, data = wines))
mod3b <- (lm(quality ~ alcohol + volatile_acidity + density, data = wines))
summary(mod3b)
wines %>%
ggplot(aes(x = quality))+
geom_bar()
cv_10_fold <- trainControl(method = "cv", # cross-validation
number = 10, # 10-fold
savePredictions = TRUE) # save all predictions
model <- train(squality ~ alcohol + volatile_acidity + density, data = wines,
trControl = cv_10_fold, # use options defined above
method = 'lm')
cv_10_fold <- trainControl(method = "cv", # cross-validation
number = 10, # 10-fold
savePredictions = TRUE) # save all predictions
model <- train(quality ~ alcohol + volatile_acidity + density, data = wines,
trControl = cv_10_fold, # use options defined above
method = 'lm')
# test mod3b
cv_10_fold <- trainControl(method = "cv", # cross-validation
number = 10, # 10-fold
savePredictions = TRUE) # save all predictions
model <- train(quality ~ alcohol + volatile_acidity + density, data = wines,
trControl = cv_10_fold, # use options defined above
method = 'lm')
# test mod3b
cv_10_fold <- trainControl(method = "cv", # cross-validation
number = 10, # 10-fold
savePredictions = TRUE) # save all predictions
model_3b <- train(quality ~ alcohol + volatile_acidity + density, data = wines,
trControl = cv_10_fold, # use options defined above
method = 'lm')
model_3b
plot(mod3b)
model_2b <- train(quality ~ alcohol + volatile_acidity, data = wines,
trControl = cv_10_fold, # use options defined above
method = 'lm')
model_2b
plot(model_2b$predictions)
model_2b <- train(quality ~ alcohol + volatile_acidity, data = wines,
trControl = cv_10_fold, # use options defined above
method = 'lm')
plot(model_2b$pred)
# calculate an average error
mean(model_3b$resample$Rsquared)
# calculate an average error
mean(model_3b$resample$RMSE)
# calculate an average r-square value
mean(model_3b$resample$Rsquared)
```
mean(model_3b$resample$RMSE)
mean(model_3b$resample$Rsquared)
model_2b <- train(quality ~ alcohol + volatile_acidity, data = wines,
trControl = cv_10_fold, # use options defined above
method = 'lm')
# calculate an average error
mean(model_2b$resample$RMSE)
# calculate an average r-square value
mean(model_2b$resample$Rsquared)r
model_2b <- train(quality ~ alcohol + volatile_acidity, data = wines,
trControl = cv_10_fold, # use options defined above
method = 'lm')
# calculate an average error
mean(model_2b$resample$RMSE)
# calculate an average r-square value
mean(model_2b$resample$Rsquared)
# test mod3b
cv_10_fold <- trainControl(method = "cv", # cross-validation
number = 10, # 10-fold
savePredictions = TRUE) # save all predictions
model_3b <- train(quality ~ alcohol + volatile_acidity + density, data = wines,
trControl = cv_10_fold, # use options defined above
method = 'lm')
# calculate an average error
mean(model_3b$resample$RMSE)
# calculate an average r-square value
mean(model_3b$resample$Rsquared)
plot(mod3b)
